{
  "HypertyConnector": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "HypertyConnector",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10001,
    "type": "Hyperties",
    "version": "0.1",
    "description": "Description of HypertyConnector",
    "objectName": "HypertyConnector",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "HelloWorldObserver": {
    "sourcePackage": {
      "sourceCode": "KGZ1bmN0aW9uKGYpe2lmKHR5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIil7bW9kdWxlLmV4cG9ydHM9ZigpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQpe2RlZmluZShbXSxmKX1lbHNle3ZhciBnO2lmKHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIil7Zz13aW5kb3d9ZWxzZSBpZih0eXBlb2YgZ2xvYmFsIT09InVuZGVmaW5lZCIpe2c9Z2xvYmFsfWVsc2UgaWYodHlwZW9mIHNlbGYhPT0idW5kZWZpbmVkIil7Zz1zZWxmfWVsc2V7Zz10aGlzfWcuYWN0aXZhdGUgPSBmKCl9fSkoZnVuY3Rpb24oKXt2YXIgZGVmaW5lLG1vZHVsZSxleHBvcnRzO3JldHVybiAoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIitvKyInIik7dGhyb3cgZi5jb2RlPSJNT0RVTEVfTk9UX0ZPVU5EIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKKGZ1bmN0aW9uIChnbG9iYWwpewovKioNCiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBDQoqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQoqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTA0KKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVg0KKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRw0KKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWUNCiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCioNCiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQoqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQoqDQoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQoqDQoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQoqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQoqKi8NCg0KLy8gRGlzdHJpYnV0aW9uIGZpbGUgZm9yIFN5bmNoZXIuanMgDQovLyB2ZXJzaW9uOiAwLjIuMA0KDQohZnVuY3Rpb24oZSl7aWYoIm9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz1lKCk7ZWxzZSBpZigiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXSxlKTtlbHNle3ZhciB0O3Q9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGY/c2VsZjp0aGlzLHQuU3luY2hlcj1lKCl9fShmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbiBlKHQscixuKXtmdW5jdGlvbiBvKHMsYyl7aWYoIXJbc10pe2lmKCF0W3NdKXt2YXIgYT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighYyYmYSlyZXR1cm4gYShzLCEwKTtpZihpKXJldHVybiBpKHMsITApO3ZhciB1PW5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK3MrIiciKTt0aHJvdyB1LmNvZGU9Ik1PRFVMRV9OT1RfRk9VTkQiLHV9dmFyIGw9cltzXT17ZXhwb3J0czp7fX07dFtzXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgcj10W3NdWzFdW2VdO3JldHVybiBvKHI/cjplKX0sbCxsLmV4cG9ydHMsZSx0LHIsbil9cmV0dXJuIHJbc10uZXhwb3J0c31mb3IodmFyIGk9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUscz0wO3M8bi5sZW5ndGg7cysrKW8obltzXSk7cmV0dXJuIG99KHsxOltmdW5jdGlvbihlLHQscil7T2JqZWN0Lm9ic2VydmUmJiFBcnJheS5vYnNlcnZlJiZmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgcj1lLmdldE5vdGlmaWVyLG49InBlcmZvcm1DaGFuZ2UiLG89Il9vcmlnaW5hbCIsaT0ic3BsaWNlIixzPXtwdXNoOmZ1bmN0aW9uIGEoZSl7dmFyIHQ9YXJndW1lbnRzLHM9YVtvXS5hcHBseSh0aGlzLHQpO3JldHVybiByKHRoaXMpW25dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6cy10Lmxlbmd0aCxhZGRlZENvdW50OnQubGVuZ3RoLHJlbW92ZWQ6W119fSksc30sdW5zaGlmdDpmdW5jdGlvbiB1KGUpe3ZhciB0PWFyZ3VtZW50cyxzPXVbb10uYXBwbHkodGhpcyx0KTtyZXR1cm4gcih0aGlzKVtuXShpLGZ1bmN0aW9uKCl7cmV0dXJue2luZGV4OjAsYWRkZWRDb3VudDp0Lmxlbmd0aCxyZW1vdmVkOltdfX0pLHN9LHBvcDpmdW5jdGlvbiBsKCl7dmFyIGU9dGhpcy5sZW5ndGgsdD1sW29dLmNhbGwodGhpcyk7cmV0dXJuIHRoaXMubGVuZ3RoIT09ZSYmcih0aGlzKVtuXShpLGZ1bmN0aW9uKCl7cmV0dXJue2luZGV4OnRoaXMubGVuZ3RoLGFkZGVkQ291bnQ6MCxyZW1vdmVkOlt0XX19LHRoaXMpLHR9LHNoaWZ0OmZ1bmN0aW9uIGYoKXt2YXIgZT10aGlzLmxlbmd0aCx0PWZbb10uY2FsbCh0aGlzKTtyZXR1cm4gdGhpcy5sZW5ndGghPT1lJiZyKHRoaXMpW25dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6MCxhZGRlZENvdW50OjAscmVtb3ZlZDpbdF19fSx0aGlzKSx0fSxzcGxpY2U6ZnVuY3Rpb24gZChlLHQpe3ZhciBzPWFyZ3VtZW50cyxjPWRbb10uYXBwbHkodGhpcyxzKTtyZXR1cm4oYy5sZW5ndGh8fHMubGVuZ3RoPjIpJiZyKHRoaXMpW25dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6ZSxhZGRlZENvdW50OnMubGVuZ3RoLTIscmVtb3ZlZDpjfX0sdGhpcyksY319O2Zvcih2YXIgYyBpbiBzKXNbY11bb109dC5wcm90b3R5cGVbY10sdC5wcm90b3R5cGVbY109c1tjXTt0Lm9ic2VydmU9ZnVuY3Rpb24odCxyKXtyZXR1cm4gZS5vYnNlcnZlKHQscixbImFkZCIsInVwZGF0ZSIsImRlbGV0ZSIsaV0pfSx0LnVub2JzZXJ2ZT1lLnVub2JzZXJ2ZX0oT2JqZWN0LEFycmF5KX0se31dLDI6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnkiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnkiOjE4fV0sMzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvY3JlYXRlIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGUiOjE5fV0sNDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5IiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkiOjIwfV0sNTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOjIxfV0sNjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiI6MjJ9XSw3OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzIjoyM31dLDg6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YiOjI0fV0sOTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UiOjI1fV0sMTA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbCI6MjZ9XSwxMTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3IiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sL2l0ZXJhdG9yIjoyN31dLDEyOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3IuX19lc01vZHVsZT0hMCxyWyJkZWZhdWx0Il09ZnVuY3Rpb24oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKX19LHt9XSwxMzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eSIpLGk9bihvKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBuPXRbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsInZhbHVlImluIG4mJihuLndyaXRhYmxlPSEwKSwoMCxpWyJkZWZhdWx0Il0pKGUsbi5rZXksbil9fXJldHVybiBmdW5jdGlvbih0LHIsbil7cmV0dXJuIHImJmUodC5wcm90b3R5cGUsciksbiYmZSh0LG4pLHR9fSgpfSx7ImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5Ijo0fV0sMTQ6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1yLl9fZXNNb2R1bGU9ITA7dmFyIG89ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIiksaT1uKG8pLHM9ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiKSxjPW4ocyk7clsiZGVmYXVsdCJdPWZ1bmN0aW9uIGEoZSx0LHIpe251bGw9PT1lJiYoZT1GdW5jdGlvbi5wcm90b3R5cGUpO3ZhciBuPSgwLGNbImRlZmF1bHQiXSkoZSx0KTtpZih2b2lkIDA9PT1uKXt2YXIgbz0oMCxpWyJkZWZhdWx0Il0pKGUpO3JldHVybiBudWxsPT09bz92b2lkIDA6YShvLHQscil9aWYoInZhbHVlImluIG4pcmV0dXJuIG4udmFsdWU7dmFyIHM9bi5nZXQ7aWYodm9pZCAwIT09cylyZXR1cm4gcy5jYWxsKHIpfX0seyJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI6NSwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIjo2fV0sMTU6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1yLl9fZXNNb2R1bGU9ITA7dmFyIG89ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mIiksaT1uKG8pLHM9ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9jcmVhdGUiKSxjPW4ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvdHlwZW9mIiksdT1uKGEpO3JbImRlZmF1bHQiXT1mdW5jdGlvbihlLHQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90ICIrKCJ1bmRlZmluZWQiPT10eXBlb2YgdD8idW5kZWZpbmVkIjooMCx1WyJkZWZhdWx0Il0pKHQpKSk7ZS5wcm90b3R5cGU9KDAsY1siZGVmYXVsdCJdKSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKGlbImRlZmF1bHQiXT8oMCxpWyJkZWZhdWx0Il0pKGUsdCk6ZS5fX3Byb3RvX189dCl9fSx7ImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvY3JlYXRlIjozLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2YiOjgsImJhYmVsLXJ1bnRpbWUvaGVscGVycy90eXBlb2YiOjE3fV0sMTY6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1yLl9fZXNNb2R1bGU9ITA7dmFyIG89ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL3R5cGVvZiIpLGk9bihvKTtyWyJkZWZhdWx0Il09ZnVuY3Rpb24oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpO3JldHVybiF0fHwib2JqZWN0IiE9PSgidW5kZWZpbmVkIj09dHlwZW9mIHQ/InVuZGVmaW5lZCI6KDAsaVsiZGVmYXVsdCJdKSh0KSkmJiJmdW5jdGlvbiIhPXR5cGVvZiB0P2U6dH19LHsiYmFiZWwtcnVudGltZS9oZWxwZXJzL3R5cGVvZiI6MTd9XSwxNzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sL2l0ZXJhdG9yIiksaT1uKG8pLHM9ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL3N5bWJvbCIpLGM9bihzKSxhPSJmdW5jdGlvbiI9PXR5cGVvZiBjWyJkZWZhdWx0Il0mJiJzeW1ib2wiPT10eXBlb2YgaVsiZGVmYXVsdCJdP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBjWyJkZWZhdWx0Il0mJmUuY29uc3RydWN0b3I9PT1jWyJkZWZhdWx0Il0/InN5bWJvbCI6dHlwZW9mIGV9O3JbImRlZmF1bHQiXT0iZnVuY3Rpb24iPT10eXBlb2YgY1siZGVmYXVsdCJdJiYic3ltYm9sIj09PWEoaVsiZGVmYXVsdCJdKT9mdW5jdGlvbihlKXtyZXR1cm4idW5kZWZpbmVkIj09dHlwZW9mIGU/InVuZGVmaW5lZCI6YShlKX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBjWyJkZWZhdWx0Il0mJmUuY29uc3RydWN0b3I9PT1jWyJkZWZhdWx0Il0/InN5bWJvbCI6InVuZGVmaW5lZCI9PXR5cGVvZiBlPyJ1bmRlZmluZWQiOmEoZSl9fSx7ImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9zeW1ib2wiOjEwLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sL2l0ZXJhdG9yIjoxMX1dLDE4OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLG89bi5KU09OfHwobi5KU09OPXtzdHJpbmdpZnk6SlNPTi5zdHJpbmdpZnl9KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uc3RyaW5naWZ5LmFwcGx5KG8sYXJndW1lbnRzKX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzV9XSwxOTpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUiKTt2YXIgbj1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBuLmNyZWF0ZShlLHQpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZSI6MTAwfV0sMjA6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5Iik7dmFyIG49ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdDt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBuLmRlZmluZVByb3BlcnR5KGUsdCxyKX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkiOjEwMX1dLDIxOltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciIpO3ZhciBuPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Q7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4uZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCl9fSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjoxMDJ9XSwyMjpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3QuZ2V0UHJvdG90eXBlT2Z9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mIjoxMDN9XSwyMzpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Qua2V5c30seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMiOjEwNH1dLDI0OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdC5zZXRQcm90b3R5cGVPZn0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YiOjEwNX1dLDI1OltmdW5jdGlvbihlLHQscil7ZSgiLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyIpLGUoIi4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciIpLGUoIi4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSIpLGUoIi4uL21vZHVsZXMvZXM2LnByb21pc2UiKSx0LmV4cG9ydHM9ZSgiLi4vbW9kdWxlcy9fY29yZSIpLlByb21pc2V9LHsiLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciOjEwNiwiLi4vbW9kdWxlcy9lczYucHJvbWlzZSI6MTA3LCIuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiOjEwOCwiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjoxMTJ9XSwyNjpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2LnN5bWJvbCIpLGUoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciKSxlKCIuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IiKSxlKCIuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZSIpLHQuZXhwb3J0cz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuU3ltYm9sfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIjoxMDYsIi4uLy4uL21vZHVsZXMvZXM2LnN5bWJvbCI6MTA5LCIuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IiOjExMCwiLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUiOjExMX1dLDI3OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIiksZSgiLi4vLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvX3drcy1leHQiKS5mKCJpdGVyYXRvciIpfSx7Ii4uLy4uL21vZHVsZXMvX3drcy1leHQiOjk2LCIuLi8uLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiOjEwOCwiLi4vLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjoxMTJ9XSwyODpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhIGZ1bmN0aW9uISIpO3JldHVybiBlfX0se31dLDI5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKCl7fX0se31dLDMwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKCEoZSBpbnN0YW5jZW9mIHQpfHx2b2lkIDAhPT1uJiZuIGluIGUpdGhyb3cgVHlwZUVycm9yKHIrIjogaW5jb3JyZWN0IGludm9jYXRpb24hIik7cmV0dXJuIGV9fSx7fV0sMzE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19pcy1vYmplY3QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoIW4oZSkpdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgYW4gb2JqZWN0ISIpO3JldHVybiBlfX0seyIuL19pcy1vYmplY3QiOjU0fV0sMzI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL190by1pb2JqZWN0Iiksbz1lKCIuL190by1sZW5ndGgiKSxpPWUoIi4vX3RvLWluZGV4Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIscyl7dmFyIGMsYT1uKHQpLHU9byhhLmxlbmd0aCksbD1pKHMsdSk7aWYoZSYmciE9cil7Zm9yKDt1Pmw7KWlmKGM9YVtsKytdLGMhPWMpcmV0dXJuITB9ZWxzZSBmb3IoO3U+bDtsKyspaWYoKGV8fGwgaW4gYSkmJmFbbF09PT1yKXJldHVybiBlfHxsfHwwO3JldHVybiFlJiYtMX19fSx7Ii4vX3RvLWluZGV4Ijo4OCwiLi9fdG8taW9iamVjdCI6OTAsIi4vX3RvLWxlbmd0aCI6OTF9XSwzMzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2NvZiIpLG89ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIiksaT0iQXJndW1lbnRzIj09bihmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpLHM9ZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIGVbdF19Y2F0Y2gocil7fX07dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0LHIsYztyZXR1cm4gdm9pZCAwPT09ZT8iVW5kZWZpbmVkIjpudWxsPT09ZT8iTnVsbCI6InN0cmluZyI9PXR5cGVvZihyPXModD1PYmplY3QoZSksbykpP3I6aT9uKHQpOiJPYmplY3QiPT0oYz1uKHQpKSYmImZ1bmN0aW9uIj09dHlwZW9mIHQuY2FsbGVlPyJBcmd1bWVudHMiOmN9fSx7Ii4vX2NvZiI6MzQsIi4vX3drcyI6OTd9XSwzNDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXt9LnRvU3RyaW5nO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbi5jYWxsKGUpLnNsaWNlKDgsLTEpfX0se31dLDM1OltmdW5jdGlvbihlLHQscil7dmFyIG49dC5leHBvcnRzPXt2ZXJzaW9uOiIyLjMuMCJ9OyJudW1iZXIiPT10eXBlb2YgX19lJiYoX19lPW4pfSx7fV0sMzY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19hLWZ1bmN0aW9uIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtpZihuKGUpLHZvaWQgMD09PXQpcmV0dXJuIGU7c3dpdGNoKHIpe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIGUuY2FsbCh0LHIpfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKHIsbil7cmV0dXJuIGUuY2FsbCh0LHIsbil9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24ocixuLG8pe3JldHVybiBlLmNhbGwodCxyLG4sbyl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBlLmFwcGx5KHQsYXJndW1lbnRzKX19fSx7Ii4vX2EtZnVuY3Rpb24iOjI4fV0sMzc6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT1lKXRocm93IFR5cGVFcnJvcigiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gICIrZSk7cmV0dXJuIGV9fSx7fV0sMzg6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9IWUoIi4vX2ZhaWxzIikoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSx7Ii4vX2ZhaWxzIjo0M31dLDM5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faXMtb2JqZWN0Iiksbz1lKCIuL19nbG9iYWwiKS5kb2N1bWVudCxpPW4obykmJm4oby5jcmVhdGVFbGVtZW50KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGk/by5jcmVhdGVFbGVtZW50KGUpOnt9fX0seyIuL19nbG9iYWwiOjQ1LCIuL19pcy1vYmplY3QiOjU0fV0sNDA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ImNvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZiIuc3BsaXQoIiwiKX0se31dLDQxOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWtleXMiKSxvPWUoIi4vX29iamVjdC1nb3BzIiksaT1lKCIuL19vYmplY3QtcGllIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PW4oZSkscj1vLmY7aWYocilmb3IodmFyIHMsYz1yKGUpLGE9aS5mLHU9MDtjLmxlbmd0aD51OylhLmNhbGwoZSxzPWNbdSsrXSkmJnQucHVzaChzKTtyZXR1cm4gdH19LHsiLi9fb2JqZWN0LWdvcHMiOjcxLCIuL19vYmplY3Qta2V5cyI6NzQsIi4vX29iamVjdC1waWUiOjc1fV0sNDI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19nbG9iYWwiKSxvPWUoIi4vX2NvcmUiKSxpPWUoIi4vX2N0eCIpLHM9ZSgiLi9faGlkZSIpLGM9InByb3RvdHlwZSIsYT1mdW5jdGlvbihlLHQscil7dmFyIHUsbCxmLGQ9ZSZhLkYscD1lJmEuRyxfPWUmYS5TLGI9ZSZhLlAsaD1lJmEuQix5PWUmYS5XLHY9cD9vOm9bdF18fChvW3RdPXt9KSxqPXZbY10sbT1wP246Xz9uW3RdOihuW3RdfHx7fSlbY107cCYmKHI9dCk7Zm9yKHUgaW4gcilsPSFkJiZtJiZ2b2lkIDAhPT1tW3VdLGwmJnUgaW4gdnx8KGY9bD9tW3VdOnJbdV0sdlt1XT1wJiYiZnVuY3Rpb24iIT10eXBlb2YgbVt1XT9yW3VdOmgmJmw/aShmLG4pOnkmJm1bdV09PWY/ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24odCxyLG4pe2lmKHRoaXMgaW5zdGFuY2VvZiBlKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgZTtjYXNlIDE6cmV0dXJuIG5ldyBlKHQpO2Nhc2UgMjpyZXR1cm4gbmV3IGUodCxyKX1yZXR1cm4gbmV3IGUodCxyLG4pfXJldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07cmV0dXJuIHRbY109ZVtjXSx0fShmKTpiJiYiZnVuY3Rpb24iPT10eXBlb2YgZj9pKEZ1bmN0aW9uLmNhbGwsZik6ZixiJiYoKHYudmlydHVhbHx8KHYudmlydHVhbD17fSkpW3VdPWYsZSZhLlImJmomJiFqW3VdJiZzKGosdSxmKSkpfTthLkY9MSxhLkc9MixhLlM9NCxhLlA9OCxhLkI9MTYsYS5XPTMyLGEuVT02NCxhLlI9MTI4LHQuZXhwb3J0cz1hfSx7Ii4vX2NvcmUiOjM1LCIuL19jdHgiOjM2LCIuL19nbG9iYWwiOjQ1LCIuL19oaWRlIjo0N31dLDQzOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4hIWUoKX1jYXRjaCh0KXtyZXR1cm4hMH19fSx7fV0sNDQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19jdHgiKSxvPWUoIi4vX2l0ZXItY2FsbCIpLGk9ZSgiLi9faXMtYXJyYXktaXRlciIpLHM9ZSgiLi9fYW4tb2JqZWN0IiksYz1lKCIuL190by1sZW5ndGgiKSxhPWUoIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLHUsbCl7dmFyIGYsZCxwLF89bD9mdW5jdGlvbigpe3JldHVybiBlfTphKGUpLGI9bihyLHUsdD8yOjEpLGg9MDtpZigiZnVuY3Rpb24iIT10eXBlb2YgXyl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBpdGVyYWJsZSEiKTtpZihpKF8pKWZvcihmPWMoZS5sZW5ndGgpO2Y+aDtoKyspdD9iKHMoZD1lW2hdKVswXSxkWzFdKTpiKGVbaF0pO2Vsc2UgZm9yKHA9Xy5jYWxsKGUpOyEoZD1wLm5leHQoKSkuZG9uZTspbyhwLGIsZC52YWx1ZSx0KX19LHsiLi9fYW4tb2JqZWN0IjozMSwiLi9fY3R4IjozNiwiLi9faXMtYXJyYXktaXRlciI6NTIsIi4vX2l0ZXItY2FsbCI6NTUsIi4vX3RvLWxlbmd0aCI6OTEsIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kIjo5OH1dLDQ1OltmdW5jdGlvbihlLHQscil7dmFyIG49dC5leHBvcnRzPSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuTWF0aD09TWF0aD93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiZzZWxmLk1hdGg9PU1hdGg/c2VsZjpGdW5jdGlvbigicmV0dXJuIHRoaXMiKSgpOyJudW1iZXIiPT10eXBlb2YgX19nJiYoX19nPW4pfSx7fV0sNDY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj17fS5oYXNPd25Qcm9wZXJ0eTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi5jYWxsKGUsdCl9fSx7fV0sNDc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19vYmplY3QtZHAiKSxvPWUoIi4vX3Byb3BlcnR5LWRlc2MiKTt0LmV4cG9ydHM9ZSgiLi9fZGVzY3JpcHRvcnMiKT9mdW5jdGlvbihlLHQscil7cmV0dXJuIG4uZihlLHQsbygxLHIpKX06ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlW3RdPXIsZX19LHsiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19vYmplY3QtZHAiOjY2LCIuL19wcm9wZXJ0eS1kZXNjIjo3N31dLDQ4OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWUoIi4vX2dsb2JhbCIpLmRvY3VtZW50JiZkb2N1bWVudC5kb2N1bWVudEVsZW1lbnR9LHsiLi9fZ2xvYmFsIjo0NX1dLDQ5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSFlKCIuL19kZXNjcmlwdG9ycyIpJiYhZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoZSgiLi9fZG9tLWNyZWF0ZSIpKCJkaXYiKSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pLmF9KX0seyIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2RvbS1jcmVhdGUiOjM5LCIuL19mYWlscyI6NDN9XSw1MDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7dmFyIG49dm9pZCAwPT09cjtzd2l0Y2godC5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbj9lKCk6ZS5jYWxsKHIpO2Nhc2UgMTpyZXR1cm4gbj9lKHRbMF0pOmUuY2FsbChyLHRbMF0pO2Nhc2UgMjpyZXR1cm4gbj9lKHRbMF0sdFsxXSk6ZS5jYWxsKHIsdFswXSx0WzFdKTtjYXNlIDM6cmV0dXJuIG4/ZSh0WzBdLHRbMV0sdFsyXSk6ZS5jYWxsKHIsdFswXSx0WzFdLHRbMl0pO2Nhc2UgNDpyZXR1cm4gbj9lKHRbMF0sdFsxXSx0WzJdLHRbM10pOmUuY2FsbChyLHRbMF0sdFsxXSx0WzJdLHRbM10pfXJldHVybiBlLmFwcGx5KHIsdCl9fSx7fV0sNTE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19jb2YiKTt0LmV4cG9ydHM9T2JqZWN0KCJ6IikucHJvcGVydHlJc0VudW1lcmFibGUoMCk/T2JqZWN0OmZ1bmN0aW9uKGUpe3JldHVybiJTdHJpbmciPT1uKGUpP2Uuc3BsaXQoIiIpOk9iamVjdChlKX19LHsiLi9fY29mIjozNH1dLDUyOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faXRlcmF0b3JzIiksbz1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxpPUFycmF5LnByb3RvdHlwZTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWUmJihuLkFycmF5PT09ZXx8aVtvXT09PWUpfX0seyIuL19pdGVyYXRvcnMiOjYwLCIuL193a3MiOjk3fV0sNTM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19jb2YiKTt0LmV4cG9ydHM9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIkFycmF5Ij09bihlKX19LHsiLi9fY29mIjozNH1dLDU0OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiJvYmplY3QiPT10eXBlb2YgZT9udWxsIT09ZToiZnVuY3Rpb24iPT10eXBlb2YgZX19LHt9XSw1NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2FuLW9iamVjdCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscixvKXt0cnl7cmV0dXJuIG8/dChuKHIpWzBdLHJbMV0pOnQocil9Y2F0Y2goaSl7dmFyIHM9ZVsicmV0dXJuIl07dGhyb3cgdm9pZCAwIT09cyYmbihzLmNhbGwoZSkpLGl9fX0seyIuL19hbi1vYmplY3QiOjMxfV0sNTY6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi9fb2JqZWN0LWNyZWF0ZSIpLG89ZSgiLi9fcHJvcGVydHktZGVzYyIpLGk9ZSgiLi9fc2V0LXRvLXN0cmluZy10YWciKSxzPXt9O2UoIi4vX2hpZGUiKShzLGUoIi4vX3drcyIpKCJpdGVyYXRvciIpLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSx0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2UucHJvdG90eXBlPW4ocyx7bmV4dDpvKDEscil9KSxpKGUsdCsiIEl0ZXJhdG9yIil9fSx7Ii4vX2hpZGUiOjQ3LCIuL19vYmplY3QtY3JlYXRlIjo2NSwiLi9fcHJvcGVydHktZGVzYyI6NzcsIi4vX3NldC10by1zdHJpbmctdGFnIjo4MiwiLi9fd2tzIjo5N31dLDU3OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPWUoIi4vX2xpYnJhcnkiKSxvPWUoIi4vX2V4cG9ydCIpLGk9ZSgiLi9fcmVkZWZpbmUiKSxzPWUoIi4vX2hpZGUiKSxjPWUoIi4vX2hhcyIpLGE9ZSgiLi9faXRlcmF0b3JzIiksdT1lKCIuL19pdGVyLWNyZWF0ZSIpLGw9ZSgiLi9fc2V0LXRvLXN0cmluZy10YWciKSxmPWUoIi4vX29iamVjdC1ncG8iKSxkPWUoIi4vX3drcyIpKCJpdGVyYXRvciIpLHA9IShbXS5rZXlzJiYibmV4dCJpbltdLmtleXMoKSksXz0iQEBpdGVyYXRvciIsYj0ia2V5cyIsaD0idmFsdWVzIix5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscix2LGosbSxnKXt1KHIsdCx2KTt2YXIgdyxPLGsseD1mdW5jdGlvbihlKXtpZighcCYmZSBpbiBUKXJldHVybiBUW2VdO3N3aXRjaChlKXtjYXNlIGI6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9O2Nhc2UgaDpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9fSxDPXQrIiBJdGVyYXRvciIsRT1qPT1oLFM9ITEsVD1lLnByb3RvdHlwZSxNPVRbZF18fFRbX118fGomJlRbal0sUj1NfHx4KGopLE49aj9FP3goImVudHJpZXMiKTpSOnZvaWQgMCxQPSJBcnJheSI9PXQ/VC5lbnRyaWVzfHxNOk07aWYoUCYmKGs9ZihQLmNhbGwobmV3IGUpKSxrIT09T2JqZWN0LnByb3RvdHlwZSYmKGwoayxDLCEwKSxufHxjKGssZCl8fHMoayxkLHkpKSksRSYmTSYmTS5uYW1lIT09aCYmKFM9ITAsUj1mdW5jdGlvbigpe3JldHVybiBNLmNhbGwodGhpcyl9KSxuJiYhZ3x8IXAmJiFTJiZUW2RdfHxzKFQsZCxSKSxhW3RdPVIsYVtDXT15LGopaWYodz17dmFsdWVzOkU/Ujp4KGgpLGtleXM6bT9SOngoYiksZW50cmllczpOfSxnKWZvcihPIGluIHcpTyBpbiBUfHxpKFQsTyx3W09dKTtlbHNlIG8oby5QK28uRioocHx8UyksdCx3KTtyZXR1cm4gd319LHsiLi9fZXhwb3J0Ijo0MiwiLi9faGFzIjo0NiwiLi9faGlkZSI6NDcsIi4vX2l0ZXItY3JlYXRlIjo1NiwiLi9faXRlcmF0b3JzIjo2MCwiLi9fbGlicmFyeSI6NjIsIi4vX29iamVjdC1ncG8iOjcyLCIuL19yZWRlZmluZSI6NzksIi4vX3NldC10by1zdHJpbmctdGFnIjo4MiwiLi9fd2tzIjo5N31dLDU4OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksbz0hMTt0cnl7dmFyIGk9WzddW25dKCk7aVsicmV0dXJuIl09ZnVuY3Rpb24oKXtvPSEwfSxBcnJheS5mcm9tKGksZnVuY3Rpb24oKXt0aHJvdyAyfSl9Y2F0Y2gocyl7fXQuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCF0JiYhbylyZXR1cm4hMTt2YXIgcj0hMTt0cnl7dmFyIGk9WzddLHM9aVtuXSgpO3MubmV4dD1mdW5jdGlvbigpe3JldHVybntkb25lOnI9ITB9fSxpW25dPWZ1bmN0aW9uKCl7cmV0dXJuIHN9LGUoaSl9Y2F0Y2goYyl7fXJldHVybiByfX0seyIuL193a3MiOjk3fV0sNTk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57dmFsdWU6dCxkb25lOiEhZX19fSx7fV0sNjA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9e319LHt9XSw2MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX29iamVjdC1rZXlzIiksbz1lKCIuL190by1pb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByLGk9byhlKSxzPW4oaSksYz1zLmxlbmd0aCxhPTA7Yz5hOylpZihpW3I9c1thKytdXT09PXQpcmV0dXJuIHJ9fSx7Ii4vX29iamVjdC1rZXlzIjo3NCwiLi9fdG8taW9iamVjdCI6OTB9XSw2MjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hMH0se31dLDYzOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fdWlkIikoIm1ldGEiKSxvPWUoIi4vX2lzLW9iamVjdCIpLGk9ZSgiLi9faGFzIikscz1lKCIuL19vYmplY3QtZHAiKS5mLGM9MCxhPU9iamVjdC5pc0V4dGVuc2libGV8fGZ1bmN0aW9uKCl7cmV0dXJuITB9LHU9IWUoIi4vX2ZhaWxzIikoZnVuY3Rpb24oKXtyZXR1cm4gYShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKX0pLGw9ZnVuY3Rpb24oZSl7cyhlLG4se3ZhbHVlOntpOiJPIisgKytjLHc6e319fSl9LGY9ZnVuY3Rpb24oZSx0KXtpZighbyhlKSlyZXR1cm4ic3ltYm9sIj09dHlwZW9mIGU/ZTooInN0cmluZyI9PXR5cGVvZiBlPyJTIjoiUCIpK2U7aWYoIWkoZSxuKSl7aWYoIWEoZSkpcmV0dXJuIkYiO2lmKCF0KXJldHVybiJFIjtsKGUpfXJldHVybiBlW25dLml9LGQ9ZnVuY3Rpb24oZSx0KXtpZighaShlLG4pKXtpZighYShlKSlyZXR1cm4hMDtpZighdClyZXR1cm4hMTtsKGUpfXJldHVybiBlW25dLnd9LHA9ZnVuY3Rpb24oZSl7cmV0dXJuIHUmJl8uTkVFRCYmYShlKSYmIWkoZSxuKSYmbChlKSxlfSxfPXQuZXhwb3J0cz17S0VZOm4sTkVFRDohMSxmYXN0S2V5OmYsZ2V0V2VhazpkLG9uRnJlZXplOnB9fSx7Ii4vX2ZhaWxzIjo0MywiLi9faGFzIjo0NiwiLi9faXMtb2JqZWN0Ijo1NCwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fdWlkIjo5NH1dLDY0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZ2xvYmFsIiksbz1lKCIuL190YXNrIikuc2V0LGk9bi5NdXRhdGlvbk9ic2VydmVyfHxuLldlYktpdE11dGF0aW9uT2JzZXJ2ZXIscz1uLnByb2Nlc3MsYz1uLlByb21pc2UsYT0icHJvY2VzcyI9PWUoIi4vX2NvZiIpKHMpO3QuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciBlLHQscix1PWZ1bmN0aW9uKCl7dmFyIG4sbztmb3IoYSYmKG49cy5kb21haW4pJiZuLmV4aXQoKTtlOyl7bz1lLmZuLGU9ZS5uZXh0O3RyeXtvKCl9Y2F0Y2goaSl7dGhyb3cgZT9yKCk6dD12b2lkIDAsaX19dD12b2lkIDAsbiYmbi5lbnRlcigpfTtpZihhKXI9ZnVuY3Rpb24oKXtzLm5leHRUaWNrKHUpfTtlbHNlIGlmKGkpe3ZhciBsPSEwLGY9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIiIpO25ldyBpKHUpLm9ic2VydmUoZix7Y2hhcmFjdGVyRGF0YTohMH0pLHI9ZnVuY3Rpb24oKXtmLmRhdGE9bD0hbH19ZWxzZSBpZihjJiZjLnJlc29sdmUpe3ZhciBkPWMucmVzb2x2ZSgpO3I9ZnVuY3Rpb24oKXtkLnRoZW4odSl9fWVsc2Ugcj1mdW5jdGlvbigpe28uY2FsbChuLHUpfTtyZXR1cm4gZnVuY3Rpb24obil7dmFyIG89e2ZuOm4sbmV4dDp2b2lkIDB9O3QmJih0Lm5leHQ9byksZXx8KGU9byxyKCkpLHQ9b319fSx7Ii4vX2NvZiI6MzQsIi4vX2dsb2JhbCI6NDUsIi4vX3Rhc2siOjg3fV0sNjU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19hbi1vYmplY3QiKSxvPWUoIi4vX29iamVjdC1kcHMiKSxpPWUoIi4vX2VudW0tYnVnLWtleXMiKSxzPWUoIi4vX3NoYXJlZC1rZXkiKSgiSUVfUFJPVE8iKSxjPWZ1bmN0aW9uKCl7fSxhPSJwcm90b3R5cGUiLHU9ZnVuY3Rpb24oKXt2YXIgdCxyPWUoIi4vX2RvbS1jcmVhdGUiKSgiaWZyYW1lIiksbj1pLmxlbmd0aCxvPSI+Ijtmb3Ioci5zdHlsZS5kaXNwbGF5PSJub25lIixlKCIuL19odG1sIikuYXBwZW5kQ2hpbGQociksci5zcmM9ImphdmFzY3JpcHQ6Iix0PXIuY29udGVudFdpbmRvdy5kb2N1bWVudCx0Lm9wZW4oKSx0LndyaXRlKCI8c2NyaXB0PmRvY3VtZW50LkY9T2JqZWN0PC9zY3JpcHQiK28pLHQuY2xvc2UoKSx1PXQuRjtuLS07KWRlbGV0ZSB1W2FdW2lbbl1dO3JldHVybiB1KCl9O3QuZXhwb3J0cz1PYmplY3QuY3JlYXRlfHxmdW5jdGlvbihlLHQpe3ZhciByO3JldHVybiBudWxsIT09ZT8oY1thXT1uKGUpLHI9bmV3IGMsY1thXT1udWxsLHJbc109ZSk6cj11KCksdm9pZCAwPT09dD9yOm8ocix0KX19LHsiLi9fYW4tb2JqZWN0IjozMSwiLi9fZG9tLWNyZWF0ZSI6MzksIi4vX2VudW0tYnVnLWtleXMiOjQwLCIuL19odG1sIjo0OCwiLi9fb2JqZWN0LWRwcyI6NjcsIi4vX3NoYXJlZC1rZXkiOjgzfV0sNjY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19hbi1vYmplY3QiKSxvPWUoIi4vX2llOC1kb20tZGVmaW5lIiksaT1lKCIuL190by1wcmltaXRpdmUiKSxzPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTtyLmY9ZSgiLi9fZGVzY3JpcHRvcnMiKT9PYmplY3QuZGVmaW5lUHJvcGVydHk6ZnVuY3Rpb24oZSx0LHIpe2lmKG4oZSksdD1pKHQsITApLG4ociksbyl0cnl7cmV0dXJuIHMoZSx0LHIpfWNhdGNoKGMpe31pZigiZ2V0ImluIHJ8fCJzZXQiaW4gcil0aHJvdyBUeXBlRXJyb3IoIkFjY2Vzc29ycyBub3Qgc3VwcG9ydGVkISIpO3JldHVybiJ2YWx1ZSJpbiByJiYoZVt0XT1yLnZhbHVlKSxlfX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2llOC1kb20tZGVmaW5lIjo0OSwiLi9fdG8tcHJpbWl0aXZlIjo5M31dLDY3OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fb2JqZWN0LWRwIiksbz1lKCIuL19hbi1vYmplY3QiKSxpPWUoIi4vX29iamVjdC1rZXlzIik7dC5leHBvcnRzPWUoIi4vX2Rlc2NyaXB0b3JzIik/T2JqZWN0LmRlZmluZVByb3BlcnRpZXM6ZnVuY3Rpb24oZSx0KXtvKGUpO2Zvcih2YXIgcixzPWkodCksYz1zLmxlbmd0aCxhPTA7Yz5hOyluLmYoZSxyPXNbYSsrXSx0W3JdKTtyZXR1cm4gZX19LHsiLi9fYW4tb2JqZWN0IjozMSwiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19vYmplY3QtZHAiOjY2LCIuL19vYmplY3Qta2V5cyI6NzR9XSw2ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX29iamVjdC1waWUiKSxvPWUoIi4vX3Byb3BlcnR5LWRlc2MiKSxpPWUoIi4vX3RvLWlvYmplY3QiKSxzPWUoIi4vX3RvLXByaW1pdGl2ZSIpLGM9ZSgiLi9faGFzIiksYT1lKCIuL19pZTgtZG9tLWRlZmluZSIpLHU9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtyLmY9ZSgiLi9fZGVzY3JpcHRvcnMiKT91OmZ1bmN0aW9uKGUsdCl7aWYoZT1pKGUpLHQ9cyh0LCEwKSxhKXRyeXtyZXR1cm4gdShlLHQpfWNhdGNoKHIpe31yZXR1cm4gYyhlLHQpP28oIW4uZi5jYWxsKGUsdCksZVt0XSk6dm9pZCAwfX0seyIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2hhcyI6NDYsIi4vX2llOC1kb20tZGVmaW5lIjo0OSwiLi9fb2JqZWN0LXBpZSI6NzUsIi4vX3Byb3BlcnR5LWRlc2MiOjc3LCIuL190by1pb2JqZWN0Ijo5MCwiLi9fdG8tcHJpbWl0aXZlIjo5M31dLDY5OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fdG8taW9iamVjdCIpLG89ZSgiLi9fb2JqZWN0LWdvcG4iKS5mLGk9e30udG9TdHJpbmcscz0ib2JqZWN0Ij09dHlwZW9mIHdpbmRvdyYmd2luZG93JiZPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcz9PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh3aW5kb3cpOltdLGM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiBvKGUpfWNhdGNoKHQpe3JldHVybiBzLnNsaWNlKCl9fTt0LmV4cG9ydHMuZj1mdW5jdGlvbihlKXtyZXR1cm4gcyYmIltvYmplY3QgV2luZG93XSI9PWkuY2FsbChlKT9jKGUpOm8obihlKSl9fSx7Ii4vX29iamVjdC1nb3BuIjo3MCwiLi9fdG8taW9iamVjdCI6OTB9XSw3MDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX29iamVjdC1rZXlzLWludGVybmFsIiksbz1lKCIuL19lbnVtLWJ1Zy1rZXlzIikuY29uY2F0KCJsZW5ndGgiLCJwcm90b3R5cGUiKTtyLmY9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXN8fGZ1bmN0aW9uKGUpe3JldHVybiBuKGUsbyl9fSx7Ii4vX2VudW0tYnVnLWtleXMiOjQwLCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCI6NzN9XSw3MTpbZnVuY3Rpb24oZSx0LHIpe3IuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzfSx7fV0sNzI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19oYXMiKSxvPWUoIi4vX3RvLW9iamVjdCIpLGk9ZSgiLi9fc2hhcmVkLWtleSIpKCJJRV9QUk9UTyIpLHM9T2JqZWN0LnByb3RvdHlwZTt0LmV4cG9ydHM9T2JqZWN0LmdldFByb3RvdHlwZU9mfHxmdW5jdGlvbihlKXtyZXR1cm4gZT1vKGUpLG4oZSxpKT9lW2ldOiJmdW5jdGlvbiI9PXR5cGVvZiBlLmNvbnN0cnVjdG9yJiZlIGluc3RhbmNlb2YgZS5jb25zdHJ1Y3Rvcj9lLmNvbnN0cnVjdG9yLnByb3RvdHlwZTplIGluc3RhbmNlb2YgT2JqZWN0P3M6bnVsbH19LHsiLi9faGFzIjo0NiwiLi9fc2hhcmVkLWtleSI6ODMsIi4vX3RvLW9iamVjdCI6OTJ9XSw3MzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2hhcyIpLG89ZSgiLi9fdG8taW9iamVjdCIpLGk9ZSgiLi9fYXJyYXktaW5jbHVkZXMiKSghMSkscz1lKCIuL19zaGFyZWQta2V5IikoIklFX1BST1RPIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsYz1vKGUpLGE9MCx1PVtdO2ZvcihyIGluIGMpciE9cyYmbihjLHIpJiZ1LnB1c2gocik7Zm9yKDt0Lmxlbmd0aD5hOyluKGMscj10W2ErK10pJiYofmkodSxyKXx8dS5wdXNoKHIpKTtyZXR1cm4gdX19LHsiLi9fYXJyYXktaW5jbHVkZXMiOjMyLCIuL19oYXMiOjQ2LCIuL19zaGFyZWQta2V5Ijo4MywiLi9fdG8taW9iamVjdCI6OTB9XSw3NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX29iamVjdC1rZXlzLWludGVybmFsIiksbz1lKCIuL19lbnVtLWJ1Zy1rZXlzIik7dC5leHBvcnRzPU9iamVjdC5rZXlzfHxmdW5jdGlvbihlKXtyZXR1cm4gbihlLG8pfX0seyIuL19lbnVtLWJ1Zy1rZXlzIjo0MCwiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiOjczfV0sNzU6W2Z1bmN0aW9uKGUsdCxyKXtyLmY9e30ucHJvcGVydHlJc0VudW1lcmFibGV9LHt9XSw3NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2V4cG9ydCIpLG89ZSgiLi9fY29yZSIpLGk9ZSgiLi9fZmFpbHMiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj0oby5PYmplY3R8fHt9KVtlXXx8T2JqZWN0W2VdLHM9e307c1tlXT10KHIpLG4obi5TK24uRippKGZ1bmN0aW9uKCl7cigxKX0pLCJPYmplY3QiLHMpfX0seyIuL19jb3JlIjozNSwiLi9fZXhwb3J0Ijo0MiwiLi9fZmFpbHMiOjQzfV0sNzc6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57ZW51bWVyYWJsZTohKDEmZSksY29uZmlndXJhYmxlOiEoMiZlKSx3cml0YWJsZTohKDQmZSksdmFsdWU6dH19fSx7fV0sNzg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19oaWRlIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG8gaW4gdClyJiZlW29dP2Vbb109dFtvXTpuKGUsbyx0W29dKTtyZXR1cm4gZX19LHsiLi9faGlkZSI6NDd9XSw3OTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1lKCIuL19oaWRlIil9LHsiLi9faGlkZSI6NDd9XSw4MDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2lzLW9iamVjdCIpLG89ZSgiLi9fYW4tb2JqZWN0IiksaT1mdW5jdGlvbihlLHQpe2lmKG8oZSksIW4odCkmJm51bGwhPT10KXRocm93IFR5cGVFcnJvcih0KyI6IGNhbid0IHNldCBhcyBwcm90b3R5cGUhIil9O3QuZXhwb3J0cz17c2V0Ok9iamVjdC5zZXRQcm90b3R5cGVPZnx8KCJfX3Byb3RvX18iaW57fT9mdW5jdGlvbih0LHIsbil7dHJ5e249ZSgiLi9fY3R4IikoRnVuY3Rpb24uY2FsbCxlKCIuL19vYmplY3QtZ29wZCIpLmYoT2JqZWN0LnByb3RvdHlwZSwiX19wcm90b19fIikuc2V0LDIpLG4odCxbXSkscj0hKHQgaW5zdGFuY2VvZiBBcnJheSl9Y2F0Y2gobyl7cj0hMH1yZXR1cm4gZnVuY3Rpb24oZSx0KXtyZXR1cm4gaShlLHQpLHI/ZS5fX3Byb3RvX189dDpuKGUsdCksZX19KHt9LCExKTp2b2lkIDApLGNoZWNrOml9fSx7Ii4vX2FuLW9iamVjdCI6MzEsIi4vX2N0eCI6MzYsIi4vX2lzLW9iamVjdCI6NTQsIi4vX29iamVjdC1nb3BkIjo2OH1dLDgxOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPWUoIi4vX2dsb2JhbCIpLG89ZSgiLi9fY29yZSIpLGk9ZSgiLi9fb2JqZWN0LWRwIikscz1lKCIuL19kZXNjcmlwdG9ycyIpLGM9ZSgiLi9fd2tzIikoInNwZWNpZXMiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9ImZ1bmN0aW9uIj09dHlwZW9mIG9bZV0/b1tlXTpuW2VdO3MmJnQmJiF0W2NdJiZpLmYodCxjLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9fSl9fSx7Ii4vX2NvcmUiOjM1LCIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2dsb2JhbCI6NDUsIi4vX29iamVjdC1kcCI6NjYsIi4vX3drcyI6OTd9XSw4MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX29iamVjdC1kcCIpLmYsbz1lKCIuL19oYXMiKSxpPWUoIi4vX3drcyIpKCJ0b1N0cmluZ1RhZyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZSYmIW8oZT1yP2U6ZS5wcm90b3R5cGUsaSkmJm4oZSxpLHtjb25maWd1cmFibGU6ITAsdmFsdWU6dH0pfX0seyIuL19oYXMiOjQ2LCIuL19vYmplY3QtZHAiOjY2LCIuL193a3MiOjk3fV0sODM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19zaGFyZWQiKSgia2V5cyIpLG89ZSgiLi9fdWlkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuW2VdfHwobltlXT1vKGUpKX19LHsiLi9fc2hhcmVkIjo4NCwiLi9fdWlkIjo5NH1dLDg0OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZ2xvYmFsIiksbz0iX19jb3JlLWpzX3NoYXJlZF9fIixpPW5bb118fChuW29dPXt9KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlbZV18fChpW2VdPXt9KX19LHsiLi9fZ2xvYmFsIjo0NX1dLDg1OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fYW4tb2JqZWN0Iiksbz1lKCIuL19hLWZ1bmN0aW9uIiksaT1lKCIuL193a3MiKSgic3BlY2llcyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByLHM9bihlKS5jb25zdHJ1Y3RvcjtyZXR1cm4gdm9pZCAwPT09c3x8dm9pZCAwPT0ocj1uKHMpW2ldKT90Om8ocil9fSx7Ii4vX2EtZnVuY3Rpb24iOjI4LCIuL19hbi1vYmplY3QiOjMxLCIuL193a3MiOjk3fV0sODY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL190by1pbnRlZ2VyIiksbz1lKCIuL19kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIpe3ZhciBpLHMsYz1TdHJpbmcobyh0KSksYT1uKHIpLHU9Yy5sZW5ndGg7cmV0dXJuIDA+YXx8YT49dT9lPyIiOnZvaWQgMDooaT1jLmNoYXJDb2RlQXQoYSksNTUyOTY+aXx8aT41NjMxOXx8YSsxPT09dXx8KHM9Yy5jaGFyQ29kZUF0KGErMSkpPDU2MzIwfHxzPjU3MzQzP2U/Yy5jaGFyQXQoYSk6aTplP2Muc2xpY2UoYSxhKzIpOihpLTU1Mjk2PDwxMCkrKHMtNTYzMjApKzY1NTM2KX19fSx7Ii4vX2RlZmluZWQiOjM3LCIuL190by1pbnRlZ2VyIjo4OX1dLDg3OltmdW5jdGlvbihlLHQscil7dmFyIG4sbyxpLHM9ZSgiLi9fY3R4IiksYz1lKCIuL19pbnZva2UiKSxhPWUoIi4vX2h0bWwiKSx1PWUoIi4vX2RvbS1jcmVhdGUiKSxsPWUoIi4vX2dsb2JhbCIpLGY9bC5wcm9jZXNzLGQ9bC5zZXRJbW1lZGlhdGUscD1sLmNsZWFySW1tZWRpYXRlLF89bC5NZXNzYWdlQ2hhbm5lbCxiPTAsaD17fSx5PSJvbnJlYWR5c3RhdGVjaGFuZ2UiLHY9ZnVuY3Rpb24oKXt2YXIgZT0rdGhpcztpZihoLmhhc093blByb3BlcnR5KGUpKXt2YXIgdD1oW2VdO2RlbGV0ZSBoW2VdLHQoKX19LGo9ZnVuY3Rpb24oZSl7di5jYWxsKGUuZGF0YSl9O2QmJnB8fChkPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXSxyPTE7YXJndW1lbnRzLmxlbmd0aD5yOyl0LnB1c2goYXJndW1lbnRzW3IrK10pO3JldHVybiBoWysrYl09ZnVuY3Rpb24oKXtjKCJmdW5jdGlvbiI9PXR5cGVvZiBlP2U6RnVuY3Rpb24oZSksdCl9LG4oYiksYn0scD1mdW5jdGlvbihlKXtkZWxldGUgaFtlXX0sInByb2Nlc3MiPT1lKCIuL19jb2YiKShmKT9uPWZ1bmN0aW9uKGUpe2YubmV4dFRpY2socyh2LGUsMSkpfTpfPyhvPW5ldyBfLGk9by5wb3J0MixvLnBvcnQxLm9ubWVzc2FnZT1qLG49cyhpLnBvc3RNZXNzYWdlLGksMSkpOmwuYWRkRXZlbnRMaXN0ZW5lciYmImZ1bmN0aW9uIj09dHlwZW9mIHBvc3RNZXNzYWdlJiYhbC5pbXBvcnRTY3JpcHRzPyhuPWZ1bmN0aW9uKGUpe2wucG9zdE1lc3NhZ2UoZSsiIiwiKiIpfSxsLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGosITEpKTpuPXkgaW4gdSgic2NyaXB0Iik/ZnVuY3Rpb24oZSl7YS5hcHBlbmRDaGlsZCh1KCJzY3JpcHQiKSlbeV09ZnVuY3Rpb24oKXthLnJlbW92ZUNoaWxkKHRoaXMpLHYuY2FsbChlKX19OmZ1bmN0aW9uKGUpe3NldFRpbWVvdXQocyh2LGUsMSksMCl9KSx0LmV4cG9ydHM9e3NldDpkLGNsZWFyOnB9fSx7Ii4vX2NvZiI6MzQsIi4vX2N0eCI6MzYsIi4vX2RvbS1jcmVhdGUiOjM5LCIuL19nbG9iYWwiOjQ1LCIuL19odG1sIjo0OCwiLi9faW52b2tlIjo1MH1dLDg4OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fdG8taW50ZWdlciIpLG89TWF0aC5tYXgsaT1NYXRoLm1pbjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT1uKGUpLDA+ZT9vKGUrdCwwKTppKGUsdCl9fSx7Ii4vX3RvLWludGVnZXIiOjg5fV0sODk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1NYXRoLmNlaWwsbz1NYXRoLmZsb29yO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaXNOYU4oZT0rZSk/MDooZT4wP286bikoZSl9fSx7fV0sOTA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19pb2JqZWN0Iiksbz1lKCIuL19kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuKG8oZSkpfX0seyIuL19kZWZpbmVkIjozNywiLi9faW9iamVjdCI6NTF9XSw5MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3RvLWludGVnZXIiKSxvPU1hdGgubWluO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZT4wP28obihlKSw5MDA3MTk5MjU0NzQwOTkxKTowfX0seyIuL190by1pbnRlZ2VyIjo4OX1dLDkyOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fZGVmaW5lZCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0KG4oZSkpfX0seyIuL19kZWZpbmVkIjozN31dLDkzOltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9faXMtb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIW4oZSkpcmV0dXJuIGU7dmFyIHIsbztpZih0JiYiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO2lmKCJmdW5jdGlvbiI9PXR5cGVvZihyPWUudmFsdWVPZikmJiFuKG89ci5jYWxsKGUpKSlyZXR1cm4gbztpZighdCYmImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS50b1N0cmluZykmJiFuKG89ci5jYWxsKGUpKSlyZXR1cm4gbzt0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZSIpfX0seyIuL19pcy1vYmplY3QiOjU0fV0sOTQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj0wLG89TWF0aC5yYW5kb20oKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIlN5bWJvbCgiLmNvbmNhdCh2b2lkIDA9PT1lPyIiOmUsIilfIiwoKytuK28pLnRvU3RyaW5nKDM2KSl9fSx7fV0sOTU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19nbG9iYWwiKSxvPWUoIi4vX2NvcmUiKSxpPWUoIi4vX2xpYnJhcnkiKSxzPWUoIi4vX3drcy1leHQiKSxjPWUoIi4vX29iamVjdC1kcCIpLmY7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PW8uU3ltYm9sfHwoby5TeW1ib2w9aT97fTpuLlN5bWJvbHx8e30pOyJfIj09ZS5jaGFyQXQoMCl8fGUgaW4gdHx8Yyh0LGUse3ZhbHVlOnMuZihlKX0pfX0seyIuL19jb3JlIjozNSwiLi9fZ2xvYmFsIjo0NSwiLi9fbGlicmFyeSI6NjIsIi4vX29iamVjdC1kcCI6NjYsIi4vX3drcy1leHQiOjk2fV0sOTY6W2Z1bmN0aW9uKGUsdCxyKXtyLmY9ZSgiLi9fd2tzIil9LHsiLi9fd2tzIjo5N31dLDk3OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fc2hhcmVkIikoIndrcyIpLG89ZSgiLi9fdWlkIiksaT1lKCIuL19nbG9iYWwiKS5TeW1ib2wscz0iZnVuY3Rpb24iPT10eXBlb2YgaSxjPXQuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbltlXXx8KG5bZV09cyYmaVtlXXx8KHM/aTpvKSgiU3ltYm9sLiIrZSkpfTtjLnN0b3JlPW59LHsiLi9fZ2xvYmFsIjo0NSwiLi9fc2hhcmVkIjo4NCwiLi9fdWlkIjo5NH1dLDk4OltmdW5jdGlvbihlLHQscil7dmFyIG49ZSgiLi9fY2xhc3NvZiIpLG89ZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksaT1lKCIuL19pdGVyYXRvcnMiKTt0LmV4cG9ydHM9ZSgiLi9fY29yZSIpLmdldEl0ZXJhdG9yTWV0aG9kPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDAhPWU/ZVtvXXx8ZVsiQEBpdGVyYXRvciJdfHxpW24oZSldOnZvaWQgMH19LHsiLi9fY2xhc3NvZiI6MzMsIi4vX2NvcmUiOjM1LCIuL19pdGVyYXRvcnMiOjYwLCIuL193a3MiOjk3fV0sOTk6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49ZSgiLi9fYWRkLXRvLXVuc2NvcGFibGVzIiksbz1lKCIuL19pdGVyLXN0ZXAiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpLHM9ZSgiLi9fdG8taW9iamVjdCIpO3QuZXhwb3J0cz1lKCIuL19pdGVyLWRlZmluZSIpKEFycmF5LCJBcnJheSIsZnVuY3Rpb24oZSx0KXt0aGlzLl90PXMoZSksdGhpcy5faT0wLHRoaXMuX2s9dH0sZnVuY3Rpb24oKXt2YXIgZT10aGlzLl90LHQ9dGhpcy5fayxyPXRoaXMuX2krKztyZXR1cm4hZXx8cj49ZS5sZW5ndGg/KHRoaXMuX3Q9dm9pZCAwLG8oMSkpOiJrZXlzIj09dD9vKDAscik6InZhbHVlcyI9PXQ/bygwLGVbcl0pOm8oMCxbcixlW3JdXSl9LCJ2YWx1ZXMiKSxpLkFyZ3VtZW50cz1pLkFycmF5LG4oImtleXMiKSxuKCJ2YWx1ZXMiKSxuKCJlbnRyaWVzIil9LHsiLi9fYWRkLXRvLXVuc2NvcGFibGVzIjoyOSwiLi9faXRlci1kZWZpbmUiOjU3LCIuL19pdGVyLXN0ZXAiOjU5LCIuL19pdGVyYXRvcnMiOjYwLCIuL190by1pb2JqZWN0Ijo5MH1dLDEwMDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX2V4cG9ydCIpO24obi5TLCJPYmplY3QiLHtjcmVhdGU6ZSgiLi9fb2JqZWN0LWNyZWF0ZSIpfSl9LHsiLi9fZXhwb3J0Ijo0MiwiLi9fb2JqZWN0LWNyZWF0ZSI6NjV9XSwxMDE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19leHBvcnQiKTtuKG4uUytuLkYqIWUoIi4vX2Rlc2NyaXB0b3JzIiksIk9iamVjdCIse2RlZmluZVByb3BlcnR5OmUoIi4vX29iamVjdC1kcCIpLmZ9KX0seyIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2V4cG9ydCI6NDIsIi4vX29iamVjdC1kcCI6NjZ9XSwxMDI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL190by1pb2JqZWN0Iiksbz1lKCIuL19vYmplY3QtZ29wZCIpLmY7ZSgiLi9fb2JqZWN0LXNhcCIpKCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8obihlKSx0KX19KX0seyIuL19vYmplY3QtZ29wZCI6NjgsIi4vX29iamVjdC1zYXAiOjc2LCIuL190by1pb2JqZWN0Ijo5MH1dLDEwMzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3RvLW9iamVjdCIpLG89ZSgiLi9fb2JqZWN0LWdwbyIpO2UoIi4vX29iamVjdC1zYXAiKSgiZ2V0UHJvdG90eXBlT2YiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBvKG4oZSkpfX0pfSx7Ii4vX29iamVjdC1ncG8iOjcyLCIuL19vYmplY3Qtc2FwIjo3NiwiLi9fdG8tb2JqZWN0Ijo5Mn1dLDEwNDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUoIi4vX3RvLW9iamVjdCIpLG89ZSgiLi9fb2JqZWN0LWtleXMiKTtlKCIuL19vYmplY3Qtc2FwIikoImtleXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBvKG4oZSkpfX0pfSx7Ii4vX29iamVjdC1rZXlzIjo3NCwiLi9fb2JqZWN0LXNhcCI6NzYsIi4vX3RvLW9iamVjdCI6OTJ9XSwxMDU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1lKCIuL19leHBvcnQiKTtuKG4uUywiT2JqZWN0Iix7c2V0UHJvdG90eXBlT2Y6ZSgiLi9fc2V0LXByb3RvIikuc2V0fSl9LHsiLi9fZXhwb3J0Ijo0MiwiLi9fc2V0LXByb3RvIjo4MH1dLDEwNjpbZnVuY3Rpb24oZSx0LHIpe30se31dLDEwNzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbixvLGkscz1lKCIuL19saWJyYXJ5IiksYz1lKCIuL19nbG9iYWwiKSxhPWUoIi4vX2N0eCIpLHU9ZSgiLi9fY2xhc3NvZiIpLGw9ZSgiLi9fZXhwb3J0IiksZj1lKCIuL19pcy1vYmplY3QiKSxkPShlKCIuL19hbi1vYmplY3QiKSxlKCIuL19hLWZ1bmN0aW9uIikpLHA9ZSgiLi9fYW4taW5zdGFuY2UiKSxfPWUoIi4vX2Zvci1vZiIpLGI9KGUoIi4vX3NldC1wcm90byIpLnNldCxlKCIuL19zcGVjaWVzLWNvbnN0cnVjdG9yIikpLGg9ZSgiLi9fdGFzayIpLnNldCx5PWUoIi4vX21pY3JvdGFzayIpKCksdj0iUHJvbWlzZSIsaj1jLlR5cGVFcnJvcixtPWMucHJvY2VzcyxnPWNbdl0sbT1jLnByb2Nlc3Msdz0icHJvY2VzcyI9PXUobSksTz1mdW5jdGlvbigpe30saz0hIWZ1bmN0aW9uKCl7dHJ5e3ZhciB0PWcucmVzb2x2ZSgxKSxyPSh0LmNvbnN0cnVjdG9yPXt9KVtlKCIuL193a3MiKSgic3BlY2llcyIpXT1mdW5jdGlvbihlKXtlKE8sTyl9O3JldHVybih3fHwiZnVuY3Rpb24iPT10eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50KSYmdC50aGVuKE8paW5zdGFuY2VvZiByfWNhdGNoKG4pe319KCkseD1mdW5jdGlvbihlLHQpe3JldHVybiBlPT09dHx8ZT09PWcmJnQ9PT1pfSxDPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiBmKGUpJiYiZnVuY3Rpb24iPT10eXBlb2YodD1lLnRoZW4pP3Q6ITF9LEU9ZnVuY3Rpb24oZSl7cmV0dXJuIHgoZyxlKT9uZXcgUyhlKTpuZXcgbyhlKX0sUz1vPWZ1bmN0aW9uKGUpe3ZhciB0LHI7dGhpcy5wcm9taXNlPW5ldyBlKGZ1bmN0aW9uKGUsbil7aWYodm9pZCAwIT09dHx8dm9pZCAwIT09cil0aHJvdyBqKCJCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvciIpO3Q9ZSxyPW59KSx0aGlzLnJlc29sdmU9ZCh0KSx0aGlzLnJlamVjdD1kKHIpfSxUPWZ1bmN0aW9uKGUpe3RyeXtlKCl9Y2F0Y2godCl7cmV0dXJue2Vycm9yOnR9fX0sTT1mdW5jdGlvbihlLHQpe2lmKCFlLl9uKXtlLl9uPSEwO3ZhciByPWUuX2M7eShmdW5jdGlvbigpe2Zvcih2YXIgbj1lLl92LG89MT09ZS5fcyxpPTAscz1mdW5jdGlvbih0KXt2YXIgcixpLHM9bz90Lm9rOnQuZmFpbCxjPXQucmVzb2x2ZSxhPXQucmVqZWN0LHU9dC5kb21haW47dHJ5e3M/KG98fCgyPT1lLl9oJiZQKGUpLGUuX2g9MSkscz09PSEwP3I9bjoodSYmdS5lbnRlcigpLHI9cyhuKSx1JiZ1LmV4aXQoKSkscj09PXQucHJvbWlzZT9hKGooIlByb21pc2UtY2hhaW4gY3ljbGUiKSk6KGk9QyhyKSk/aS5jYWxsKHIsYyxhKTpjKHIpKTphKG4pfWNhdGNoKGwpe2EobCl9fTtyLmxlbmd0aD5pOylzKHJbaSsrXSk7ZS5fYz1bXSxlLl9uPSExLHQmJiFlLl9oJiZSKGUpfSl9fSxSPWZ1bmN0aW9uKGUpe2guY2FsbChjLGZ1bmN0aW9uKCl7dmFyIHQscixuLG89ZS5fdjtpZihOKGUpJiYodD1UKGZ1bmN0aW9uKCl7dz9tLmVtaXQoInVuaGFuZGxlZFJlamVjdGlvbiIsbyxlKToocj1jLm9udW5oYW5kbGVkcmVqZWN0aW9uKT9yKHtwcm9taXNlOmUscmVhc29uOm99KToobj1jLmNvbnNvbGUpJiZuLmVycm9yJiZuLmVycm9yKCJVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24iLG8pfSksZS5faD13fHxOKGUpPzI6MSksZS5fYT12b2lkIDAsdCl0aHJvdyB0LmVycm9yfSl9LE49ZnVuY3Rpb24oZSl7aWYoMT09ZS5faClyZXR1cm4hMTtmb3IodmFyIHQscj1lLl9hfHxlLl9jLG49MDtyLmxlbmd0aD5uOylpZih0PXJbbisrXSx0LmZhaWx8fCFOKHQucHJvbWlzZSkpcmV0dXJuITE7cmV0dXJuITB9LFA9ZnVuY3Rpb24oZSl7aC5jYWxsKGMsZnVuY3Rpb24oKXt2YXIgdDt3P20uZW1pdCgicmVqZWN0aW9uSGFuZGxlZCIsZSk6KHQ9Yy5vbnJlamVjdGlvbmhhbmRsZWQpJiZ0KHtwcm9taXNlOmUscmVhc29uOmUuX3Z9KX0pfSxEPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5fZHx8KHQuX2Q9ITAsdD10Ll93fHx0LHQuX3Y9ZSx0Ll9zPTIsdC5fYXx8KHQuX2E9dC5fYy5zbGljZSgpKSxNKHQsITApKX0sQT1mdW5jdGlvbihlKXt2YXIgdCxyPXRoaXM7aWYoIXIuX2Qpe3IuX2Q9ITAscj1yLl93fHxyO3RyeXtpZihyPT09ZSl0aHJvdyBqKCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZiIpOyh0PUMoZSkpP3koZnVuY3Rpb24oKXt2YXIgbj17X3c6cixfZDohMX07dHJ5e3QuY2FsbChlLGEoQSxuLDEpLGEoRCxuLDEpKX1jYXRjaChvKXtELmNhbGwobixvKX19KTooci5fdj1lLHIuX3M9MSxNKHIsITEpKX1jYXRjaChuKXtELmNhbGwoe193OnIsX2Q6ITF9LG4pfX19O2t8fChnPWZ1bmN0aW9uKGUpe3AodGhpcyxnLHYsIl9oIiksZChlKSxuLmNhbGwodGhpcyk7dHJ5e2UoYShBLHRoaXMsMSksYShELHRoaXMsMSkpfWNhdGNoKHQpe0QuY2FsbCh0aGlzLHQpfX0sbj1mdW5jdGlvbihlKXt0aGlzLl9jPVtdLHRoaXMuX2E9dm9pZCAwLHRoaXMuX3M9MCx0aGlzLl9kPSExLHRoaXMuX3Y9dm9pZCAwLHRoaXMuX2g9MCx0aGlzLl9uPSExfSxuLnByb3RvdHlwZT1lKCIuL19yZWRlZmluZS1hbGwiKShnLnByb3RvdHlwZSx7dGhlbjpmdW5jdGlvbihlLHQpe3ZhciByPUUoYih0aGlzLGcpKTtyZXR1cm4gci5vaz0iZnVuY3Rpb24iPT10eXBlb2YgZT9lOiEwLHIuZmFpbD0iZnVuY3Rpb24iPT10eXBlb2YgdCYmdCxyLmRvbWFpbj13P20uZG9tYWluOnZvaWQgMCx0aGlzLl9jLnB1c2gociksdGhpcy5fYSYmdGhpcy5fYS5wdXNoKHIpLHRoaXMuX3MmJk0odGhpcywhMSksci5wcm9taXNlfSwiY2F0Y2giOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnRoZW4odm9pZCAwLGUpfX0pLFM9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgbjt0aGlzLnByb21pc2U9ZSx0aGlzLnJlc29sdmU9YShBLGUsMSksdGhpcy5yZWplY3Q9YShELGUsMSl9KSxsKGwuRytsLlcrbC5GKiFrLHtQcm9taXNlOmd9KSxlKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpKGcsdiksDQplKCIuL19zZXQtc3BlY2llcyIpKHYpLGk9ZSgiLi9fY29yZSIpW3ZdLGwobC5TK2wuRiohayx2LHtyZWplY3Q6ZnVuY3Rpb24oZSl7dmFyIHQ9RSh0aGlzKSxyPXQucmVqZWN0O3JldHVybiByKGUpLHQucHJvbWlzZX19KSxsKGwuUytsLkYqKHN8fCFrKSx2LHtyZXNvbHZlOmZ1bmN0aW9uKGUpe2lmKGUgaW5zdGFuY2VvZiBnJiZ4KGUuY29uc3RydWN0b3IsdGhpcykpcmV0dXJuIGU7dmFyIHQ9RSh0aGlzKSxyPXQucmVzb2x2ZTtyZXR1cm4gcihlKSx0LnByb21pc2V9fSksbChsLlMrbC5GKiEoayYmZSgiLi9faXRlci1kZXRlY3QiKShmdW5jdGlvbihlKXtnLmFsbChlKVsiY2F0Y2giXShPKX0pKSx2LHthbGw6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPUUodCksbj1yLnJlc29sdmUsbz1yLnJlamVjdCxpPVQoZnVuY3Rpb24oKXt2YXIgcj1bXSxpPTAscz0xO18oZSwhMSxmdW5jdGlvbihlKXt2YXIgYz1pKyssYT0hMTtyLnB1c2godm9pZCAwKSxzKyssdC5yZXNvbHZlKGUpLnRoZW4oZnVuY3Rpb24oZSl7YXx8KGE9ITAscltjXT1lLC0tc3x8bihyKSl9LG8pfSksLS1zfHxuKHIpfSk7cmV0dXJuIGkmJm8oaS5lcnJvciksci5wcm9taXNlfSxyYWNlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1FKHQpLG49ci5yZWplY3Qsbz1UKGZ1bmN0aW9uKCl7XyhlLCExLGZ1bmN0aW9uKGUpe3QucmVzb2x2ZShlKS50aGVuKHIucmVzb2x2ZSxuKX0pfSk7cmV0dXJuIG8mJm4oby5lcnJvciksci5wcm9taXNlfX0pfSx7Ii4vX2EtZnVuY3Rpb24iOjI4LCIuL19hbi1pbnN0YW5jZSI6MzAsIi4vX2FuLW9iamVjdCI6MzEsIi4vX2NsYXNzb2YiOjMzLCIuL19jb3JlIjozNSwiLi9fY3R4IjozNiwiLi9fZXhwb3J0Ijo0MiwiLi9fZm9yLW9mIjo0NCwiLi9fZ2xvYmFsIjo0NSwiLi9faXMtb2JqZWN0Ijo1NCwiLi9faXRlci1kZXRlY3QiOjU4LCIuL19saWJyYXJ5Ijo2MiwiLi9fbWljcm90YXNrIjo2NCwiLi9fcmVkZWZpbmUtYWxsIjo3OCwiLi9fc2V0LXByb3RvIjo4MCwiLi9fc2V0LXNwZWNpZXMiOjgxLCIuL19zZXQtdG8tc3RyaW5nLXRhZyI6ODIsIi4vX3NwZWNpZXMtY29uc3RydWN0b3IiOjg1LCIuL190YXNrIjo4NywiLi9fd2tzIjo5N31dLDEwODpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1lKCIuL19zdHJpbmctYXQiKSghMCk7ZSgiLi9faXRlci1kZWZpbmUiKShTdHJpbmcsIlN0cmluZyIsZnVuY3Rpb24oZSl7dGhpcy5fdD1TdHJpbmcoZSksdGhpcy5faT0wfSxmdW5jdGlvbigpe3ZhciBlLHQ9dGhpcy5fdCxyPXRoaXMuX2k7cmV0dXJuIHI+PXQubGVuZ3RoP3t2YWx1ZTp2b2lkIDAsZG9uZTohMH06KGU9bih0LHIpLHRoaXMuX2krPWUubGVuZ3RoLHt2YWx1ZTplLGRvbmU6ITF9KX0pfSx7Ii4vX2l0ZXItZGVmaW5lIjo1NywiLi9fc3RyaW5nLWF0Ijo4Nn1dLDEwOTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1lKCIuL19nbG9iYWwiKSxvPWUoIi4vX2hhcyIpLGk9ZSgiLi9fZGVzY3JpcHRvcnMiKSxzPWUoIi4vX2V4cG9ydCIpLGM9ZSgiLi9fcmVkZWZpbmUiKSxhPWUoIi4vX21ldGEiKS5LRVksdT1lKCIuL19mYWlscyIpLGw9ZSgiLi9fc2hhcmVkIiksZj1lKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpLGQ9ZSgiLi9fdWlkIikscD1lKCIuL193a3MiKSxfPWUoIi4vX3drcy1leHQiKSxiPWUoIi4vX3drcy1kZWZpbmUiKSxoPWUoIi4vX2tleW9mIikseT1lKCIuL19lbnVtLWtleXMiKSx2PWUoIi4vX2lzLWFycmF5Iiksaj1lKCIuL19hbi1vYmplY3QiKSxtPWUoIi4vX3RvLWlvYmplY3QiKSxnPWUoIi4vX3RvLXByaW1pdGl2ZSIpLHc9ZSgiLi9fcHJvcGVydHktZGVzYyIpLE89ZSgiLi9fb2JqZWN0LWNyZWF0ZSIpLGs9ZSgiLi9fb2JqZWN0LWdvcG4tZXh0IikseD1lKCIuL19vYmplY3QtZ29wZCIpLEM9ZSgiLi9fb2JqZWN0LWRwIiksRT1lKCIuL19vYmplY3Qta2V5cyIpLFM9eC5mLFQ9Qy5mLE09ay5mLFI9bi5TeW1ib2wsTj1uLkpTT04sUD1OJiZOLnN0cmluZ2lmeSxEPSJwcm90b3R5cGUiLEE9cCgiX2hpZGRlbiIpLEw9cCgidG9QcmltaXRpdmUiKSxGPXt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLEk9bCgic3ltYm9sLXJlZ2lzdHJ5IiksVj1sKCJzeW1ib2xzIiksej1PYmplY3RbRF0sVT0iZnVuY3Rpb24iPT10eXBlb2YgUixIPW4uUU9iamVjdCxCPSFIfHwhSFtEXXx8IUhbRF0uZmluZENoaWxkLFc9aSYmdShmdW5jdGlvbigpe3JldHVybiA3IT1PKFQoe30sImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gVCh0aGlzLCJhIix7dmFsdWU6N30pLmF9fSkpLmF9KT9mdW5jdGlvbihlLHQscil7dmFyIG49Uyh6LHQpO24mJmRlbGV0ZSB6W3RdLFQoZSx0LHIpLG4mJmUhPT16JiZUKHosdCxuKX06VCxKPWZ1bmN0aW9uKGUpe3ZhciB0PVZbZV09TyhSW0RdKTtyZXR1cm4gdC5faz1lLHR9LFk9VSYmInN5bWJvbCI9PXR5cGVvZiBSLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiJzeW1ib2wiPT10eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBSfSxxPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gaihlKSx0PWcodCwhMCksaihyKSxvKFYsdCk/KHIuZW51bWVyYWJsZT8obyhlLEEpJiZlW0FdW3RdJiYoZVtBXVt0XT0hMSkscj1PKHIse2VudW1lcmFibGU6dygwLCExKX0pKToobyhlLEEpfHxUKGUsQSx3KDEse30pKSxlW0FdW3RdPSEwKSxXKGUsdCxyKSk6VChlLHQscil9LEs9ZnVuY3Rpb24oZSx0KXtqKGUpO2Zvcih2YXIgcixuPXkodD1tKHQpKSxvPTAsaT1uLmxlbmd0aDtpPm87KXEoZSxyPW5bbysrXSx0W3JdKTtyZXR1cm4gZX0sRz1mdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10P08oZSk6SyhPKGUpLHQpfSxaPWZ1bmN0aW9uKGUpe3ZhciB0PUYuY2FsbCh0aGlzLGU9ZyhlLCEwKSk7cmV0dXJuIHR8fCFvKHRoaXMsZSl8fCFvKFYsZSl8fG8odGhpcyxBKSYmdGhpc1tBXVtlXT90OiEwfSxYPWZ1bmN0aW9uKGUsdCl7dmFyIHI9UyhlPW0oZSksdD1nKHQsITApKTtyZXR1cm4hcnx8IW8oVix0KXx8byhlLEEpJiZlW0FdW3RdfHwoci5lbnVtZXJhYmxlPSEwKSxyfSwkPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxyPU0obShlKSksbj1bXSxpPTA7ci5sZW5ndGg+aTspbyhWLHQ9cltpKytdKXx8dD09QXx8dD09YXx8bi5wdXNoKHQpO3JldHVybiBufSxRPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxyPU0obShlKSksbj1bXSxpPTA7ci5sZW5ndGg+aTspbyhWLHQ9cltpKytdKSYmbi5wdXNoKFZbdF0pO3JldHVybiBufTtVfHwoUj1mdW5jdGlvbigpe2lmKHRoaXMgaW5zdGFuY2VvZiBSKXRocm93IFR5cGVFcnJvcigiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yISIpO3ZhciBlPWQoYXJndW1lbnRzLmxlbmd0aD4wP2FyZ3VtZW50c1swXTp2b2lkIDApO3JldHVybiBpJiZCJiZXKHosZSx7Y29uZmlndXJhYmxlOiEwLHNldDpmdW5jdGlvbih0KXtvKHRoaXMsQSkmJm8odGhpc1tBXSxlKSYmKHRoaXNbQV1bZV09ITEpLFcodGhpcyxlLHcoMSx0KSl9fSksSihlKX0sYyhSW0RdLCJ0b1N0cmluZyIsZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fa30pLHguZj1YLEMuZj1xLGUoIi4vX29iamVjdC1nb3BuIikuZj1rLmY9JCxlKCIuL19vYmplY3QtcGllIikuZj1aLGUoIi4vX29iamVjdC1nb3BzIikuZj1RLGkmJiFlKCIuL19saWJyYXJ5IikmJmMoeiwicHJvcGVydHlJc0VudW1lcmFibGUiLFosITApLF8uZj1mdW5jdGlvbihlKXtyZXR1cm4gSihwKGUpKX0pLHMocy5HK3MuVytzLkYqIVUse1N5bWJvbDpSfSk7Zm9yKHZhciBlZT0iaGFzSW5zdGFuY2UsaXNDb25jYXRTcHJlYWRhYmxlLGl0ZXJhdG9yLG1hdGNoLHJlcGxhY2Usc2VhcmNoLHNwZWNpZXMsc3BsaXQsdG9QcmltaXRpdmUsdG9TdHJpbmdUYWcsdW5zY29wYWJsZXMiLnNwbGl0KCIsIiksdGU9MDtlZS5sZW5ndGg+dGU7KXAoZWVbdGUrK10pO2Zvcih2YXIgZWU9RShwLnN0b3JlKSx0ZT0wO2VlLmxlbmd0aD50ZTspYihlZVt0ZSsrXSk7cyhzLlMrcy5GKiFVLCJTeW1ib2wiLHsiZm9yIjpmdW5jdGlvbihlKXtyZXR1cm4gbyhJLGUrPSIiKT9JW2VdOklbZV09UihlKX0sa2V5Rm9yOmZ1bmN0aW9uKGUpe2lmKFkoZSkpcmV0dXJuIGgoSSxlKTt0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhIHN5bWJvbCEiKX0sdXNlU2V0dGVyOmZ1bmN0aW9uKCl7Qj0hMH0sdXNlU2ltcGxlOmZ1bmN0aW9uKCl7Qj0hMX19KSxzKHMuUytzLkYqIVUsIk9iamVjdCIse2NyZWF0ZTpHLGRlZmluZVByb3BlcnR5OnEsZGVmaW5lUHJvcGVydGllczpLLGdldE93blByb3BlcnR5RGVzY3JpcHRvcjpYLGdldE93blByb3BlcnR5TmFtZXM6JCxnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6UX0pLE4mJnMocy5TK3MuRiooIVV8fHUoZnVuY3Rpb24oKXt2YXIgZT1SKCk7cmV0dXJuIltudWxsXSIhPVAoW2VdKXx8Int9IiE9UCh7YTplfSl8fCJ7fSIhPVAoT2JqZWN0KGUpKX0pKSwiSlNPTiIse3N0cmluZ2lmeTpmdW5jdGlvbihlKXtpZih2b2lkIDAhPT1lJiYhWShlKSl7Zm9yKHZhciB0LHIsbj1bZV0sbz0xO2FyZ3VtZW50cy5sZW5ndGg+bzspbi5wdXNoKGFyZ3VtZW50c1tvKytdKTtyZXR1cm4gdD1uWzFdLCJmdW5jdGlvbiI9PXR5cGVvZiB0JiYocj10KSwhciYmdih0KXx8KHQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gciYmKHQ9ci5jYWxsKHRoaXMsZSx0KSksWSh0KT92b2lkIDA6dH0pLG5bMV09dCxQLmFwcGx5KE4sbil9fX0pLFJbRF1bTF18fGUoIi4vX2hpZGUiKShSW0RdLEwsUltEXS52YWx1ZU9mKSxmKFIsIlN5bWJvbCIpLGYoTWF0aCwiTWF0aCIsITApLGYobi5KU09OLCJKU09OIiwhMCl9LHsiLi9fYW4tb2JqZWN0IjozMSwiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19lbnVtLWtleXMiOjQxLCIuL19leHBvcnQiOjQyLCIuL19mYWlscyI6NDMsIi4vX2dsb2JhbCI6NDUsIi4vX2hhcyI6NDYsIi4vX2hpZGUiOjQ3LCIuL19pcy1hcnJheSI6NTMsIi4vX2tleW9mIjo2MSwiLi9fbGlicmFyeSI6NjIsIi4vX21ldGEiOjYzLCIuL19vYmplY3QtY3JlYXRlIjo2NSwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fb2JqZWN0LWdvcGQiOjY4LCIuL19vYmplY3QtZ29wbiI6NzAsIi4vX29iamVjdC1nb3BuLWV4dCI6NjksIi4vX29iamVjdC1nb3BzIjo3MSwiLi9fb2JqZWN0LWtleXMiOjc0LCIuL19vYmplY3QtcGllIjo3NSwiLi9fcHJvcGVydHktZGVzYyI6NzcsIi4vX3JlZGVmaW5lIjo3OSwiLi9fc2V0LXRvLXN0cmluZy10YWciOjgyLCIuL19zaGFyZWQiOjg0LCIuL190by1pb2JqZWN0Ijo5MCwiLi9fdG8tcHJpbWl0aXZlIjo5MywiLi9fdWlkIjo5NCwiLi9fd2tzIjo5NywiLi9fd2tzLWRlZmluZSI6OTUsIi4vX3drcy1leHQiOjk2fV0sMTEwOltmdW5jdGlvbihlLHQscil7ZSgiLi9fd2tzLWRlZmluZSIpKCJhc3luY0l0ZXJhdG9yIil9LHsiLi9fd2tzLWRlZmluZSI6OTV9XSwxMTE6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuL193a3MtZGVmaW5lIikoIm9ic2VydmFibGUiKX0seyIuL193a3MtZGVmaW5lIjo5NX1dLDExMjpbZnVuY3Rpb24oZSx0LHIpe2UoIi4vZXM2LmFycmF5Lml0ZXJhdG9yIik7Zm9yKHZhciBuPWUoIi4vX2dsb2JhbCIpLG89ZSgiLi9faGlkZSIpLGk9ZSgiLi9faXRlcmF0b3JzIikscz1lKCIuL193a3MiKSgidG9TdHJpbmdUYWciKSxjPVsiTm9kZUxpc3QiLCJET01Ub2tlbkxpc3QiLCJNZWRpYUxpc3QiLCJTdHlsZVNoZWV0TGlzdCIsIkNTU1J1bGVMaXN0Il0sYT0wOzU+YTthKyspe3ZhciB1PWNbYV0sbD1uW3VdLGY9bCYmbC5wcm90b3R5cGU7ZiYmIWZbc10mJm8oZixzLHUpLGlbdV09aS5BcnJheX19LHsiLi9fZ2xvYmFsIjo0NSwiLi9faGlkZSI6NDcsIi4vX2l0ZXJhdG9ycyI6NjAsIi4vX3drcyI6OTcsIi4vZXM2LmFycmF5Lml0ZXJhdG9yIjo5OX1dLDExMzpbZnVuY3Rpb24oZSx0LHIpe3dpbmRvdy5NdXRhdGlvbk9ic2VydmVyPXdpbmRvdy5NdXRhdGlvbk9ic2VydmVyfHx3aW5kb3cuV2ViS2l0TXV0YXRpb25PYnNlcnZlcnx8ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXt0aGlzLmc9W10sdGhpcy5rPWV9ZnVuY3Rpb24gcihlKXshZnVuY3Rpb24gcigpe3ZhciBuPWUudGFrZVJlY29yZHMoKTtuLmxlbmd0aCYmZS5rKG4sZSksZS5mPXNldFRpbWVvdXQocix0Ll9wZXJpb2QpfSgpfWZ1bmN0aW9uIG4odCl7dmFyIHIsbj17dHlwZTpudWxsLHRhcmdldDpudWxsLGFkZGVkTm9kZXM6W10scmVtb3ZlZE5vZGVzOltdLHByZXZpb3VzU2libGluZzpudWxsLG5leHRTaWJsaW5nOm51bGwsYXR0cmlidXRlTmFtZTpudWxsLGF0dHJpYnV0ZU5hbWVzcGFjZTpudWxsLG9sZFZhbHVlOm51bGx9O2ZvcihyIGluIHQpbltyXSE9PWUmJnRbcl0hPT1lJiYobltyXT10W3JdKTtyZXR1cm4gbn1mdW5jdGlvbiBvKGUsdCl7dmFyIHI9YyhlLHQpO3JldHVybiBmdW5jdGlvbihuKXt2YXIgbyxhPW4ubGVuZ3RoO3QuYSYmci5hJiZpKG4sZSxyLmEsdC5kKSwodC5ifHx0LmUpJiYobz1zKG4sZSxyLHQpKSwob3x8bi5sZW5ndGghPT1hKSYmKHI9YyhlLHQpKX19ZnVuY3Rpb24gaSh0LHIsbyxpKXtmb3IodmFyIHMsYyxhPXt9LHU9ci5hdHRyaWJ1dGVzLGw9dS5sZW5ndGg7bC0tOylzPXVbbF0sYz1zLm5hbWUsaSYmaVtjXT09PWV8fChzLnZhbHVlIT09b1tjXSYmdC5wdXNoKG4oe3R5cGU6ImF0dHJpYnV0ZXMiLHRhcmdldDpyLGF0dHJpYnV0ZU5hbWU6YyxvbGRWYWx1ZTpvW2NdLGF0dHJpYnV0ZU5hbWVzcGFjZTpzLm5hbWVzcGFjZVVSSX0pKSxhW2NdPSEwKTtmb3IoYyBpbiBvKWFbY118fHQucHVzaChuKHt0YXJnZXQ6cix0eXBlOiJhdHRyaWJ1dGVzIixhdHRyaWJ1dGVOYW1lOmMsb2xkVmFsdWU6b1tjXX0pKX1mdW5jdGlvbiBzKHQscixvLHMpe2Z1bmN0aW9uIGMoZSxyLG8sYyxhKXt2YXIgbD1lLmxlbmd0aC0xO2E9LX4oKGwtYSkvMik7Zm9yKHZhciBmLGQscDtwPWUucG9wKCk7KWY9b1twLmhdLGQ9Y1twLmldLHMuYiYmYSYmTWF0aC5hYnMocC5oLXAuaSk+PWwmJih0LnB1c2gobih7dHlwZToiY2hpbGRMaXN0Iix0YXJnZXQ6cixhZGRlZE5vZGVzOltmXSxyZW1vdmVkTm9kZXM6W2ZdLG5leHRTaWJsaW5nOmYubmV4dFNpYmxpbmcscHJldmlvdXNTaWJsaW5nOmYucHJldmlvdXNTaWJsaW5nfSkpLGEtLSkscy5hJiZkLmEmJmkodCxmLGQuYSxzLmQpLHMuYyYmMz09PWYubm9kZVR5cGUmJmYubm9kZVZhbHVlIT09ZC5jJiZ0LnB1c2gobih7dHlwZToiY2hhcmFjdGVyRGF0YSIsdGFyZ2V0OmZ9KSkscy5lJiZ1KGYsZCl9ZnVuY3Rpb24gdShyLG8pe2Zvcih2YXIgZCxwLF8sYixoLHk9ci5jaGlsZE5vZGVzLHY9by5iLGo9eS5sZW5ndGgsbT12P3YubGVuZ3RoOjAsZz0wLHc9MCxPPTA7aj53fHxtPk87KWI9eVt3XSxoPShfPXZbT10pJiZfLmosYj09PWg/KHMuYSYmXy5hJiZpKHQsYixfLmEscy5kKSxzLmMmJl8uYyE9PWUmJmIubm9kZVZhbHVlIT09Xy5jJiZ0LnB1c2gobih7dHlwZToiY2hhcmFjdGVyRGF0YSIsdGFyZ2V0OmJ9KSkscCYmYyhwLHIseSx2LGcpLHMuZSYmKGIuY2hpbGROb2Rlcy5sZW5ndGh8fF8uYiYmXy5iLmxlbmd0aCkmJnUoYixfKSx3KyssTysrKToobD0hMCxkfHwoZD17fSxwPVtdKSxiJiYoZFtfPWEoYildfHwoZFtfXT0hMCwtMT09PShfPWYodixiLE8sImoiKSk/cy5iJiYodC5wdXNoKG4oe3R5cGU6ImNoaWxkTGlzdCIsdGFyZ2V0OnIsYWRkZWROb2RlczpbYl0sbmV4dFNpYmxpbmc6Yi5uZXh0U2libGluZyxwcmV2aW91c1NpYmxpbmc6Yi5wcmV2aW91c1NpYmxpbmd9KSksZysrKTpwLnB1c2goe2g6dyxpOl99KSksdysrKSxoJiZoIT09eVt3XSYmKGRbXz1hKGgpXXx8KGRbX109ITAsLTE9PT0oXz1mKHksaCx3KSk/cy5iJiYodC5wdXNoKG4oe3R5cGU6ImNoaWxkTGlzdCIsdGFyZ2V0Om8uaixyZW1vdmVkTm9kZXM6W2hdLG5leHRTaWJsaW5nOnZbTysxXSxwcmV2aW91c1NpYmxpbmc6dltPLTFdfSkpLGctLSk6cC5wdXNoKHtoOl8saTpPfSkpLE8rKykpO3AmJmMocCxyLHksdixnKX12YXIgbDtyZXR1cm4gdShyLG8pLGx9ZnVuY3Rpb24gYyhlLHQpe3ZhciByPSEwO3JldHVybiBmdW5jdGlvbiBuKGUpe3ZhciBvPXtqOmV9O3JldHVybiF0LmN8fDMhPT1lLm5vZGVUeXBlJiY4IT09ZS5ub2RlVHlwZT8odC5hJiZyJiYxPT09ZS5ub2RlVHlwZSYmKG8uYT1sKGUuYXR0cmlidXRlcyxmdW5jdGlvbihlLHIpe3JldHVybiB0LmQmJiF0LmRbci5uYW1lXXx8KGVbci5uYW1lXT1yLnZhbHVlKSxlfSkpLHImJih0LmJ8fHQuY3x8dC5hJiZ0LmUpJiYoby5iPXUoZS5jaGlsZE5vZGVzLG4pKSxyPXQuZSk6by5jPWUubm9kZVZhbHVlLG99KGUpfWZ1bmN0aW9uIGEoZSl7dHJ5e3JldHVybiBlLmlkfHwoZS5tb19pZD1lLm1vX2lkfHxkKyspfWNhdGNoKHQpe3RyeXtyZXR1cm4gZS5ub2RlVmFsdWV9Y2F0Y2gocil7cmV0dXJuIGQrK319fWZ1bmN0aW9uIHUoZSx0KXtmb3IodmFyIHI9W10sbj0wO248ZS5sZW5ndGg7bisrKXJbbl09dChlW25dLG4sZSk7cmV0dXJuIHJ9ZnVuY3Rpb24gbChlLHQpe2Zvcih2YXIgcj17fSxuPTA7bjxlLmxlbmd0aDtuKyspcj10KHIsZVtuXSxuLGUpO3JldHVybiByfWZ1bmN0aW9uIGYoZSx0LHIsbil7Zm9yKDtyPGUubGVuZ3RoO3IrKylpZigobj9lW3JdW25dOmVbcl0pPT09dClyZXR1cm4gcjtyZXR1cm4tMX10Ll9wZXJpb2Q9MzAsdC5wcm90b3R5cGU9e29ic2VydmU6ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49e2E6ISEodC5hdHRyaWJ1dGVzfHx0LmF0dHJpYnV0ZUZpbHRlcnx8dC5hdHRyaWJ1dGVPbGRWYWx1ZSksYjohIXQuY2hpbGRMaXN0LGU6ISF0LnN1YnRyZWUsYzohKCF0LmNoYXJhY3RlckRhdGEmJiF0LmNoYXJhY3RlckRhdGFPbGRWYWx1ZSl9LGk9dGhpcy5nLHM9MDtzPGkubGVuZ3RoO3MrKylpW3NdLm09PT1lJiZpLnNwbGljZShzLDEpO3QuYXR0cmlidXRlRmlsdGVyJiYobi5kPWwodC5hdHRyaWJ1dGVGaWx0ZXIsZnVuY3Rpb24oZSx0KXtyZXR1cm4gZVt0XT0hMCxlfSkpLGkucHVzaCh7bTplLGw6byhlLG4pfSksdGhpcy5mfHxyKHRoaXMpfSx0YWtlUmVjb3JkczpmdW5jdGlvbigpe2Zvcih2YXIgZT1bXSx0PXRoaXMuZyxyPTA7cjx0Lmxlbmd0aDtyKyspdFtyXS5sKGUpO3JldHVybiBlfSxkaXNjb25uZWN0OmZ1bmN0aW9uKCl7dGhpcy5nPVtdLGNsZWFyVGltZW91dCh0aGlzLmYpLHRoaXMuZj1udWxsfX07dmFyIGQ9MTtyZXR1cm4gdH0odm9pZCAwKX0se31dLDExNDpbZnVuY3Rpb24oZSx0LHIpe09iamVjdC5vYnNlcnZlfHxmdW5jdGlvbihlLHQscixuKXsidXNlIHN0cmljdCI7dmFyIG8saSxzPVsiYWRkIiwidXBkYXRlIiwiZGVsZXRlIiwicmVjb25maWd1cmUiLCJzZXRQcm90b3R5cGUiLCJwcmV2ZW50RXh0ZW5zaW9ucyJdLGM9dC5pc0FycmF5fHxmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIltvYmplY3QgQXJyYXldIj09PWUuY2FsbCh0KX19KGUucHJvdG90eXBlLnRvU3RyaW5nKSxhPXQucHJvdG90eXBlLmluZGV4T2Y/dC5pbmRleE9mfHxmdW5jdGlvbihlLHIsbil7cmV0dXJuIHQucHJvdG90eXBlLmluZGV4T2YuY2FsbChlLHIsbil9OmZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG49cnx8MDtuPGUubGVuZ3RoO24rKylpZihlW25dPT09dClyZXR1cm4gbjtyZXR1cm4tMX0sdT1yLk1hcCE9PW4mJk1hcC5wcm90b3R5cGUuZm9yRWFjaD9mdW5jdGlvbigpe3JldHVybiBuZXcgTWFwfTpmdW5jdGlvbigpe3ZhciBlPVtdLHQ9W107cmV0dXJue3NpemU6MCxoYXM6ZnVuY3Rpb24odCl7cmV0dXJuIGEoZSx0KT4tMX0sZ2V0OmZ1bmN0aW9uKHIpe3JldHVybiB0W2EoZSxyKV19LHNldDpmdW5jdGlvbihyLG4pe3ZhciBvPWEoZSxyKTstMT09PW8/KGUucHVzaChyKSx0LnB1c2gobiksdGhpcy5zaXplKyspOnRbb109bn0sImRlbGV0ZSI6ZnVuY3Rpb24ocil7dmFyIG49YShlLHIpO24+LTEmJihlLnNwbGljZShuLDEpLHQuc3BsaWNlKG4sMSksdGhpcy5zaXplLS0pfSxmb3JFYWNoOmZ1bmN0aW9uKHIpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXIuY2FsbChhcmd1bWVudHNbMV0sdFtuXSxlW25dLHRoaXMpfX19LGw9ZS5nZXRPd25Qcm9wZXJ0eU5hbWVzP2Z1bmN0aW9uKCl7dmFyIHQ9ZS5nZXRPd25Qcm9wZXJ0eU5hbWVzO3RyeXthcmd1bWVudHMuY2FsbGVlfWNhdGNoKHIpe3ZhciBuPSh0KGEpLmpvaW4oIiAiKSsiICIpLnJlcGxhY2UoL3Byb3RvdHlwZSB8bGVuZ3RoIHxuYW1lIC9nLCIiKS5zbGljZSgwLC0xKS5zcGxpdCgiICIpO24ubGVuZ3RoJiYodD1mdW5jdGlvbih0KXt2YXIgcj1lLmdldE93blByb3BlcnR5TmFtZXModCk7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHQpZm9yKHZhciBvLGk9MDtpPG4ubGVuZ3RoOykobz1hKHIsbltpKytdKSk+LTEmJnIuc3BsaWNlKG8sMSk7cmV0dXJuIHJ9KX1yZXR1cm4gdH0oKTpmdW5jdGlvbih0KXt2YXIgcixuLG89W107aWYoImhhc093blByb3BlcnR5ImluIHQpZm9yKHIgaW4gdCl0Lmhhc093blByb3BlcnR5KHIpJiZvLnB1c2gocik7ZWxzZXtuPWUuaGFzT3duUHJvcGVydHk7Zm9yKHIgaW4gdCluLmNhbGwodCxyKSYmby5wdXNoKHIpfXJldHVybiBjKHQpJiZvLnB1c2goImxlbmd0aCIpLG99LGY9ZS5nZXRQcm90b3R5cGVPZixkPWUuZGVmaW5lUHJvcGVydGllcyYmZS5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IscD1yLnJlcXVlc3RBbmltYXRpb25GcmFtZXx8ci53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKCl7dmFyIGU9K25ldyBEYXRlLHQ9ZTtyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtyKCh0PStuZXcgRGF0ZSktZSl9LDE3KX19KCksXz1mdW5jdGlvbihlLHQscil7dmFyIG49by5nZXQoZSk7bj8oaChuLGUpLG0oZSxuLHQscikpOihuPWIoZSksbShlLG4sdCxyKSwxPT09by5zaXplJiZwKHkpKX0sYj1mdW5jdGlvbih0LHIpe3ZhciBuLGk9bCh0KSxzPVtdLGM9MCxyPXtoYW5kbGVyczp1KCksZnJvemVuOmUuaXNGcm96ZW4/ZS5pc0Zyb3plbih0KTohMSxleHRlbnNpYmxlOmUuaXNFeHRlbnNpYmxlP2UuaXNFeHRlbnNpYmxlKHQpOiEwLHByb3RvOmYmJmYodCkscHJvcGVydGllczppLHZhbHVlczpzLG5vdGlmaWVyOmoodCxyKX07aWYoZClmb3Iobj1yLmRlc2NyaXB0b3JzPVtdO2M8aS5sZW5ndGg7KW5bY109ZCh0LGlbY10pLHNbY109dFtpW2MrK11dO2Vsc2UgZm9yKDtjPGkubGVuZ3RoOylzW2NdPXRbaVtjKytdXTtyZXR1cm4gby5zZXQodCxyKSxyfSxoPWZ1bmN0aW9uKCl7dmFyIHQ9ZD9mdW5jdGlvbihlLHQscixuLG8pe3ZhciBpPXQucHJvcGVydGllc1tyXSxzPWVbaV0sYz10LnZhbHVlc1tyXSxhPXQuZGVzY3JpcHRvcnNbcl07InZhbHVlImluIG8mJihjPT09cz8wPT09YyYmMS9jIT09MS9zOmM9PT1jfHxzPT09cykmJihnKGUsdCx7bmFtZTppLHR5cGU6InVwZGF0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6Y30sbiksdC52YWx1ZXNbcl09cyksIWEuY29uZmlndXJhYmxlfHxvLmNvbmZpZ3VyYWJsZSYmby53cml0YWJsZT09PWEud3JpdGFibGUmJm8uZW51bWVyYWJsZT09PWEuZW51bWVyYWJsZSYmby5nZXQ9PT1hLmdldCYmby5zZXQ9PT1hLnNldHx8KGcoZSx0LHtuYW1lOmksdHlwZToicmVjb25maWd1cmUiLG9iamVjdDplLG9sZFZhbHVlOmN9LG4pLHQuZGVzY3JpcHRvcnNbcl09byl9OmZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBvPXQucHJvcGVydGllc1tyXSxpPWVbb10scz10LnZhbHVlc1tyXTsocz09PWk/MD09PXMmJjEvcyE9PTEvaTpzPT09c3x8aT09PWkpJiYoZyhlLHQse25hbWU6byx0eXBlOiJ1cGRhdGUiLG9iamVjdDplLG9sZFZhbHVlOnN9LG4pLHQudmFsdWVzW3JdPWkpfSxyPWQ/ZnVuY3Rpb24oZSxyLG4sbyxpKXtmb3IodmFyIHMsYz1yLmxlbmd0aDtuJiZjLS07KW51bGwhPT1yW2NdJiYocz1kKGUscltjXSksbi0tLHM/dChlLG8sYyxpLHMpOihnKGUsbyx7bmFtZTpyW2NdLHR5cGU6ImRlbGV0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6by52YWx1ZXNbY119LGkpLG8ucHJvcGVydGllcy5zcGxpY2UoYywxKSxvLnZhbHVlcy5zcGxpY2UoYywxKSxvLmRlc2NyaXB0b3JzLnNwbGljZShjLDEpKSl9OmZ1bmN0aW9uKGUsdCxyLG4sbyl7Zm9yKHZhciBpPXQubGVuZ3RoO3ImJmktLTspbnVsbCE9PXRbaV0mJihnKGUsbix7bmFtZTp0W2ldLHR5cGU6ImRlbGV0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6bi52YWx1ZXNbaV19LG8pLG4ucHJvcGVydGllcy5zcGxpY2UoaSwxKSxuLnZhbHVlcy5zcGxpY2UoaSwxKSxyLS0pfTtyZXR1cm4gZnVuY3Rpb24obixvLGkpe2lmKG4uaGFuZGxlcnMuc2l6ZSYmIW4uZnJvemVuKXt2YXIgcyxjLHUscCxfLGIsaCx5LHY9bi52YWx1ZXMsaj1uLmRlc2NyaXB0b3JzLG09MDtpZihuLmV4dGVuc2libGUpaWYocz1uLnByb3BlcnRpZXMuc2xpY2UoKSxjPXMubGVuZ3RoLHU9bChvKSxqKXtmb3IoO208dS5sZW5ndGg7KV89dVttKytdLHA9YShzLF8pLHk9ZChvLF8pLC0xPT09cD8oZyhvLG4se25hbWU6Xyx0eXBlOiJhZGQiLG9iamVjdDpvfSxpKSxuLnByb3BlcnRpZXMucHVzaChfKSx2LnB1c2gob1tfXSksai5wdXNoKHkpKTooc1twXT1udWxsLGMtLSx0KG8sbixwLGkseSkpO3IobyxzLGMsbixpKSxlLmlzRXh0ZW5zaWJsZShvKXx8KG4uZXh0ZW5zaWJsZT0hMSxnKG8sbix7dHlwZToicHJldmVudEV4dGVuc2lvbnMiLG9iamVjdDpvfSxpKSxuLmZyb3plbj1lLmlzRnJvemVuKG8pKX1lbHNle2Zvcig7bTx1Lmxlbmd0aDspXz11W20rK10scD1hKHMsXyksYj1vW19dLC0xPT09cD8oZyhvLG4se25hbWU6Xyx0eXBlOiJhZGQiLG9iamVjdDpvfSxpKSxuLnByb3BlcnRpZXMucHVzaChfKSx2LnB1c2goYikpOihzW3BdPW51bGwsYy0tLHQobyxuLHAsaSkpO3IobyxzLGMsbixpKX1lbHNlIGlmKCFuLmZyb3plbil7Zm9yKDttPHMubGVuZ3RoO20rKylfPXNbbV0sdChvLG4sbSxpLGQobyxfKSk7ZS5pc0Zyb3plbihvKSYmKG4uZnJvemVuPSEwKX1mJiYoaD1mKG8pLGghPT1uLnByb3RvJiYoZyhvLG4se3R5cGU6InNldFByb3RvdHlwZSIsbmFtZToiX19wcm90b19fIixvYmplY3Q6byxvbGRWYWx1ZTpuLnByb3RvfSksbi5wcm90bz1oKSl9fX0oKSx5PWZ1bmN0aW9uKCl7by5zaXplJiYoby5mb3JFYWNoKGgpLGkuZm9yRWFjaCh2KSxwKHkpKX0sdj1mdW5jdGlvbihlLHQpe3ZhciByPWUuY2hhbmdlUmVjb3JkcztyLmxlbmd0aCYmKGUuY2hhbmdlUmVjb3Jkcz1bXSx0KHIpKX0saj1mdW5jdGlvbihlLHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPDImJih0PW8uZ2V0KGUpKSx0JiZ0Lm5vdGlmaWVyfHx7bm90aWZ5OmZ1bmN0aW9uKHQpe3QudHlwZTt2YXIgcj1vLmdldChlKTtpZihyKXt2YXIgbixpPXtvYmplY3Q6ZX07Zm9yKG4gaW4gdCkib2JqZWN0IiE9PW4mJihpW25dPXRbbl0pO2coZSxyLGkpfX0scGVyZm9ybUNoYW5nZTpmdW5jdGlvbih0LHIpe2lmKCJzdHJpbmciIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIG5vbi1zdHJpbmcgY2hhbmdlVHlwZSIpO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiByKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBwZXJmb3JtIG5vbi1mdW5jdGlvbiIpO3ZhciBpLHMsYz1vLmdldChlKSxhPWFyZ3VtZW50c1syXSx1PWE9PT1uP3IoKTpyLmNhbGwoYSk7aWYoYyYmaChjLGUsdCksYyYmdSYmIm9iamVjdCI9PXR5cGVvZiB1KXtzPXtvYmplY3Q6ZSx0eXBlOnR9O2ZvcihpIGluIHUpIm9iamVjdCIhPT1pJiYidHlwZSIhPT1pJiYoc1tpXT11W2ldKTtnKGUsYyxzKX19fX0sbT1mdW5jdGlvbihlLHQscixuKXt2YXIgbz1pLmdldChyKTtvfHxpLnNldChyLG89e29ic2VydmVkOnUoKSxjaGFuZ2VSZWNvcmRzOltdfSksby5vYnNlcnZlZC5zZXQoZSx7YWNjZXB0TGlzdDpuLnNsaWNlKCksZGF0YTp0fSksdC5oYW5kbGVycy5zZXQocixvKX0sZz1mdW5jdGlvbihlLHQscixuKXt0LmhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIG89dC5vYnNlcnZlZC5nZXQoZSkuYWNjZXB0TGlzdDsoInN0cmluZyIhPXR5cGVvZiBufHwtMT09PWEobyxuKSkmJmEobyxyLnR5cGUpPi0xJiZ0LmNoYW5nZVJlY29yZHMucHVzaChyKX0pfTtvPXUoKSxpPXUoKSxlLm9ic2VydmU9ZnVuY3Rpb24odCxyLG8pe2lmKCF0fHwib2JqZWN0IiE9dHlwZW9mIHQmJiJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5vYnNlcnZlIGNhbm5vdCBvYnNlcnZlIG5vbi1vYmplY3QiKTtpZigiZnVuY3Rpb24iIT10eXBlb2Ygcil0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3Qub2JzZXJ2ZSBjYW5ub3QgZGVsaXZlciB0byBub24tZnVuY3Rpb24iKTtpZihlLmlzRnJvemVuJiZlLmlzRnJvemVuKHIpKXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5vYnNlcnZlIGNhbm5vdCBkZWxpdmVyIHRvIGEgZnJvemVuIGZ1bmN0aW9uIG9iamVjdCIpO2lmKG89PT1uKW89cztlbHNlIGlmKCFvfHwib2JqZWN0IiE9dHlwZW9mIG8pdGhyb3cgbmV3IFR5cGVFcnJvcigiVGhpcmQgYXJndW1lbnQgdG8gT2JqZWN0Lm9ic2VydmUgbXVzdCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzLiIpO3JldHVybiBfKHQscixvKSx0fSxlLnVub2JzZXJ2ZT1mdW5jdGlvbihlLHQpe2lmKG51bGw9PT1lfHwib2JqZWN0IiE9dHlwZW9mIGUmJiJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC51bm9ic2VydmUgY2Fubm90IHVub2JzZXJ2ZSBub24tb2JqZWN0Iik7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0LnVub2JzZXJ2ZSBjYW5ub3QgZGVsaXZlciB0byBub24tZnVuY3Rpb24iKTt2YXIgcixuPWkuZ2V0KHQpO3JldHVybiBuJiYocj1uLm9ic2VydmVkLmdldChlKSkmJihuLm9ic2VydmVkLmZvckVhY2goZnVuY3Rpb24oZSx0KXtoKGUuZGF0YSx0KX0pLHAoZnVuY3Rpb24oKXt2KG4sdCl9KSwxPT09bi5vYnNlcnZlZC5zaXplJiZuLm9ic2VydmVkLmhhcyhlKT9pWyJkZWxldGUiXSh0KTpuLm9ic2VydmVkWyJkZWxldGUiXShlKSwxPT09ci5kYXRhLmhhbmRsZXJzLnNpemU/b1siZGVsZXRlIl0oZSk6ci5kYXRhLmhhbmRsZXJzWyJkZWxldGUiXSh0KSksZX0sZS5nZXROb3RpZmllcj1mdW5jdGlvbih0KXtpZihudWxsPT09dHx8Im9iamVjdCIhPXR5cGVvZiB0JiYiZnVuY3Rpb24iIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3QuZ2V0Tm90aWZpZXIgY2Fubm90IGdldE5vdGlmaWVyIG5vbi1vYmplY3QiKTtyZXR1cm4gZS5pc0Zyb3plbiYmZS5pc0Zyb3plbih0KT9udWxsOmoodCl9LGUuZGVsaXZlckNoYW5nZVJlY29yZHM9ZnVuY3Rpb24oZSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0LmRlbGl2ZXJDaGFuZ2VSZWNvcmRzIGNhbm5vdCBkZWxpdmVyIHRvIG5vbi1mdW5jdGlvbiIpO3ZhciB0PWkuZ2V0KGUpO3QmJih0Lm9ic2VydmVkLmZvckVhY2goZnVuY3Rpb24oZSx0KXtoKGUuZGF0YSx0KX0pLHYodCxlKSl9fShPYmplY3QsQXJyYXksdGhpcyl9LHt9XSwxMTU6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5EYXRhT2JqZWN0T2JzZXJ2ZXI9ci5EYXRhT2JqZWN0UmVwb3J0ZXI9ci5TeW5jaGVyPXZvaWQgMCxlKCJtdXRhdGlvbm9ic2VydmVyLXNoaW0iKSxlKCJvYmplY3Qub2JzZXJ2ZSIpLGUoImFycmF5Lm9ic2VydmUiKTt2YXIgbz1lKCIuL3N5bmNoZXIvU3luY2hlciIpLGk9bihvKSxzPWUoIi4vc3luY2hlci9EYXRhT2JqZWN0UmVwb3J0ZXIiKSxjPW4ocyksYT1lKCIuL3N5bmNoZXIvRGF0YU9iamVjdE9ic2VydmVyIiksdT1uKGEpO3IuU3luY2hlcj1pWyJkZWZhdWx0Il0sci5EYXRhT2JqZWN0UmVwb3J0ZXI9Y1siZGVmYXVsdCJdLHIuRGF0YU9iamVjdE9ic2VydmVyPXVbImRlZmF1bHQiXX0seyIuL3N5bmNoZXIvRGF0YU9iamVjdE9ic2VydmVyIjoxMTgsIi4vc3luY2hlci9EYXRhT2JqZWN0UmVwb3J0ZXIiOjExOSwiLi9zeW5jaGVyL1N5bmNoZXIiOjEyMiwiYXJyYXkub2JzZXJ2ZSI6MSwibXV0YXRpb25vYnNlcnZlci1zaGltIjoxMTMsIm9iamVjdC5vYnNlcnZlIjoxMTR9XSwxMTY6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UiKSxpPW4obykscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxjPW4ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSx1PW4oYSksbD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxmPW4obCksZD1lKCIuL1N5bmNPYmplY3QiKSxwPW4oZCksXz1lKCIuL0RhdGFPYmplY3RDaGlsZCIpLGI9bihfKSxoPWUoIi4uL3V0aWxzL3V0aWxzLmpzIikseT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG4sbyxpLHMpeygwLHVbImRlZmF1bHQiXSkodGhpcyxlKTt2YXIgYz10aGlzO2MuX3N5bmNoZXI9dCxjLl91cmw9cixjLl9zY2hlbWE9bixjLl9zdGF0dXM9byxjLl9zeW5jT2JqPW5ldyBwWyJkZWZhdWx0Il0oaSksYy5fY2hpbGRyZW5zPXMsYy5fdmVyc2lvbj0wLGMuX2NoaWxkSWQ9MCxjLl9jaGlsZHJlbk9iamVjdHM9e30sYy5fY2hpbGRyZW5MaXN0ZW5lcnM9W10sYy5fb3duZXI9dC5fb3duZXIsYy5fYnVzPXQuX2J1c31yZXR1cm4oMCxmWyJkZWZhdWx0Il0pKGUsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcyxyPXQuX3VybCsiL2NoaWxkcmVuLyI7dC5fY2hpbGRyZW5zJiZ0Ll9jaGlsZHJlbnMuZm9yRWFjaChmdW5jdGlvbihuKXt2YXIgbz1yK24saT10Ll9idXMuYWRkTGlzdGVuZXIobyxmdW5jdGlvbihyKXtpZihyLmZyb20hPT1lLl9vd25lcilzd2l0Y2goY29uc29sZS5sb2coIkRhdGFPYmplY3QtQ2hpbGRyZW4tUkNWOiAiLHIpLHIudHlwZSl7Y2FzZSJjcmVhdGUiOnQuX29uQ2hpbGRDcmVhdGUocik7YnJlYWs7Y2FzZSJkZWxldGUiOmNvbnNvbGUubG9nKHIpO2JyZWFrO2RlZmF1bHQ6dC5fY2hhbmdlQ2hpbGRyZW4ocil9fSk7dC5fY2hpbGRyZW5MaXN0ZW5lcnMucHVzaChpKX0pfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9jaGlsZHJlbkxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UucmVtb3ZlKCl9KSwoMCxjWyJkZWZhdWx0Il0pKGUuX2NoaWxkcmVuT2JqZWN0cykuZm9yRWFjaChmdW5jdGlvbih0KXtlLl9jaGlsZHJlbk9iamVjdHNbdF0uX3JlbGVhc2VMaXN0ZW5lcnMoKX0pfX0se2tleToicGF1c2UiLHZhbHVlOmZ1bmN0aW9uKCl7dGhyb3ciTm90IGltcGxlbWVudGVkIn19LHtrZXk6InJlc3VtZSIsdmFsdWU6ZnVuY3Rpb24oKXt0aHJvdyJOb3QgaW1wbGVtZW50ZWQifX0se2tleToic3RvcCIsdmFsdWU6ZnVuY3Rpb24oKXt0aHJvdyJOb3QgaW1wbGVtZW50ZWQifX0se2tleToiYWRkQ2hpbGQiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztyLl9jaGlsZElkKys7dmFyIG49ci5fb3duZXIrIiMiK3IuX2NoaWxkSWQsbz1yLl91cmwrIi9jaGlsZHJlbi8iK2Uscz17dHlwZToiY3JlYXRlIixmcm9tOnIuX293bmVyLHRvOm8sYm9keTp7cmVzb3VyY2U6bix2YWx1ZTp0fX07cmV0dXJuIG5ldyBpWyJkZWZhdWx0Il0oZnVuY3Rpb24oZSl7dmFyIGk9ci5fYnVzLnBvc3RNZXNzYWdlKHMpO2NvbnNvbGUubG9nKCJjcmVhdGUtcmVwb3J0ZXItY2hpbGQoICIrci5fb3duZXIrIiApOiAiLHMpO3ZhciBjPW5ldyBiWyJkZWZhdWx0Il0ocixuLHQsci5fb3duZXIsaSk7Yy5vbkNoYW5nZShmdW5jdGlvbihlKXtyLl9vbkNoYW5nZShlLHtwYXRoOm8sY2hpbGRJZDpufSl9KSxyLl9jaGlsZHJlbk9iamVjdHNbbl09YyxlKGMpfSl9fSx7a2V5OiJvbkFkZENoaWxkIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbkFkZENoaWxkcmVuSGFuZGxlcj1lfX0se2tleToiX29uQ2hpbGRDcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkucmVzb3VyY2U7Y29uc29sZS5sb2coImNyZWF0ZS1vYnNlcnZlci1jaGlsZCggIit0Ll9vd25lcisiICk6ICIsZSk7dmFyIG49bmV3IGJbImRlZmF1bHQiXSh0LHIsZS5ib2R5LnZhbHVlKTt0Ll9jaGlsZHJlbk9iamVjdHNbcl09bixzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6MjAwLHNvdXJjZTp0Ll9vd25lcn19KX0pO3ZhciBvPXt0eXBlOmUudHlwZSxmcm9tOmUuZnJvbSx1cmw6ZS50byx2YWx1ZTplLmJvZHkudmFsdWUsY2hpbGRJZDpyLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eX07dC5fb25BZGRDaGlsZHJlbkhhbmRsZXImJihjb25zb2xlLmxvZygiQURELUNISUxEUkVOLUVWRU5UOiAiLG8pLHQuX29uQWRkQ2hpbGRyZW5IYW5kbGVyKG8pKX19LHtrZXk6Il9vbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO2lmKHIuX3ZlcnNpb24rKywib24iPT09ci5fc3RhdHVzKXt2YXIgbj17dHlwZToidXBkYXRlIixmcm9tOnIuX3VybCx0bzpyLl91cmwrIi9jaGFuZ2VzIixib2R5Ont2ZXJzaW9uOnIuX3ZlcnNpb24sc291cmNlOnIuX293bmVyLGF0dHJpYnV0ZTplLmZpZWxkfX07ZS5vVHlwZT09PWQuT2JqZWN0VHlwZS5PQkpFQ1Q/ZS5jVHlwZSE9PWQuQ2hhbmdlVHlwZS5SRU1PVkUmJihuLmJvZHkudmFsdWU9ZS5kYXRhKToobi5ib2R5LmF0dHJpYnV0ZVR5cGU9ZS5vVHlwZSxuLmJvZHkudmFsdWU9ZS5kYXRhLGUuY1R5cGUhPT1kLkNoYW5nZVR5cGUuVVBEQVRFJiYobi5ib2R5Lm9wZXJhdGlvbj1lLmNUeXBlKSksdCYmKG4udG89dC5wYXRoLG4uYm9keS5yZXNvdXJjZT10LmNoaWxkSWQpLHIuX2J1cy5wb3N0TWVzc2FnZShuKX19fSx7a2V5OiJfY2hhbmdlT2JqZWN0Iix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7aWYoci5fdmVyc2lvbisxPT09dC5ib2R5LnZlcnNpb24pe3IuX3ZlcnNpb24rKzt2YXIgbj10LmJvZHkuYXR0cmlidXRlLG89KDAsaC5kZWVwQ2xvbmUpKHQuYm9keS52YWx1ZSksaT1lLmZpbmRCZWZvcmUobik7aWYodC5ib2R5LmF0dHJpYnV0ZVR5cGU9PT1kLk9iamVjdFR5cGUuQVJSQVkpaWYodC5ib2R5Lm9wZXJhdGlvbj09PWQuQ2hhbmdlVHlwZS5BREQpe3ZhciBzPWkub2JqLGM9aS5sYXN0O0FycmF5LnByb3RvdHlwZS5zcGxpY2UuYXBwbHkocyxbYywwXS5jb25jYXQobykpfWVsc2UgaWYodC5ib2R5Lm9wZXJhdGlvbj09PWQuQ2hhbmdlVHlwZS5SRU1PVkUpe3ZhciBhPWkub2JqLHU9aS5sYXN0O2Euc3BsaWNlKHUsbyl9ZWxzZSBpLm9ialtpLmxhc3RdPW87ZWxzZSB0LmJvZHkudmFsdWU/aS5vYmpbaS5sYXN0XT1vOmRlbGV0ZSBpLm9ialtpLmxhc3RdfWVsc2UgY29uc29sZS5sb2coIlVOU1lOQ0hST05JWkVEIFZFUlNJT046IChkYXRhID0+ICIrci5fdmVyc2lvbisiLCBtc2cgPT4gIit0LmJvZHkudmVyc2lvbisiKSIpfX0se2tleToiX2NoYW5nZUNoaWxkcmVuIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO2NvbnNvbGUubG9nKCJDaGFuZ2UgY2hpbGRyZW46ICIsdC5fb3duZXIsZSk7dmFyIHI9ZS5ib2R5LnJlc291cmNlLG49dC5fY2hpbGRyZW5PYmplY3RzW3JdO24/dC5fY2hhbmdlT2JqZWN0KG4uX3N5bmNPYmosZSk6Y29uc29sZS5sb2coIk5vIGNoaWxkcmVuIGZvdW5kIGZvcjogIixyKX19LHtrZXk6InVybCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VybH19LHtrZXk6InNjaGVtYSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NjaGVtYX19LHtrZXk6InN0YXR1cyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0YXR1c319LHtrZXk6ImRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zeW5jT2JqLmRhdGF9fSx7a2V5OiJjaGlsZHJlbnMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZHJlbk9iamVjdHN9fV0pLGV9KCk7clsiZGVmYXVsdCJdPXksdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyIuLi91dGlscy91dGlscy5qcyI6MTIzLCIuL0RhdGFPYmplY3RDaGlsZCI6MTE3LCIuL1N5bmNPYmplY3QiOjEyMSwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjo3LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSI6OSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxM31dLDExNzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSxpPW4obykscz1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxjPW4ocyksYT1lKCIuL1N5bmNPYmplY3QiKSx1PW4oYSksbD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG4sbyxzKXsoMCxpWyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIGM9dGhpcztjLl9wYXJlbnQ9dCxjLl9jaGlsZElkPXIsYy5fb3duZXI9byxjLl9tc2dJZD1zLGMuX3N5bmNPYmo9bmV3IHVbImRlZmF1bHQiXShuKSxjLl9idXM9dC5fYnVzLGMuX2FsbG9jYXRlTGlzdGVuZXJzKCl9cmV0dXJuKDAsY1siZGVmYXVsdCJdKShlLFt7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9vd25lciYmKGUuX2xpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl9vd25lcixmdW5jdGlvbih0KXsicmVzcG9uc2UiPT09dC50eXBlJiZ0LmlkPT09ZS5fbXNnSWQmJihjb25zb2xlLmxvZygiRGF0YU9iamVjdENoaWxkLm9uUmVzcG9uc2U6Iix0KSxlLl9vblJlc3BvbnNlKHQpKX0pKX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fbGlzdGVuZXImJmUuX2xpc3RlbmVyLnJlbW92ZSgpfX0se2tleToiZGVsZXRlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZGVsZXRlIGUuX3BhcmVudC5fY2hpbGRyZW5bZS5fY2hpbGRJZF0sZS5fcmVsZWFzZUxpc3RlbmVycygpfX0se2tleToib25DaGFuZ2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX3N5bmNPYmoub2JzZXJ2ZShmdW5jdGlvbih0KXtlKHQpfSl9fSx7a2V5OiJvblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlc3BvbnNlSGFuZGxlcj1lfX0se2tleToiX29uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj17dHlwZTplLnR5cGUsdXJsOmUuYm9keS5zb3VyY2UsY29kZTplLmJvZHkuY29kZX07dC5fb25SZXNwb25zZUhhbmRsZXImJnQuX29uUmVzcG9uc2VIYW5kbGVyKHIpfX0se2tleToiY2hpbGRJZCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NoaWxkSWR9fSx7a2V5OiJkYXRhIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3luY09iai5kYXRhfX1dKSxlfSgpO3JbImRlZmF1bHQiXT1sLHQuZXhwb3J0cz1yWyJkZWZhdWx0Il19LHsiLi9TeW5jT2JqZWN0IjoxMjEsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MTIsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MTN9XSwxMTg6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIiksaT1uKG8pLHM9ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIiksYz1uKHMpLGE9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksdT1uKGEpLGw9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksZj1uKGwpLGQ9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iKSxwPW4oZCksXz1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvZ2V0IiksYj1uKF8pLGg9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzIikseT1uKGgpLHY9ZSgiLi9EYXRhT2JqZWN0Iiksaj1uKHYpLG09ZSgiLi9EYXRhT2JqZWN0Q2hpbGQiKSxnPW4obSksdz17QU5ZOiJhbnkiLFNUQVJUOiJzdGFydCIsRVhBQ1Q6ImV4YWN0In0sTz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUscixuLG8scyxhLGwpeygwLHVbImRlZmF1bHQiXSkodGhpcyx0KTt2YXIgZj0oMCxwWyJkZWZhdWx0Il0pKHRoaXMsKDAsY1siZGVmYXVsdCJdKSh0KS5jYWxsKHRoaXMsZSxyLG4sbyxzLmRhdGEsYSkpLGQ9ZjtyZXR1cm4gZC5fdmVyc2lvbj1sLGQuX2ZpbHRlcnM9e30sZC5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKGUpe2QuX29uRmlsdGVyKGUpfSksKDAsaVsiZGVmYXVsdCJdKShzLmNoaWxkcmVucykuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1zLmNoaWxkcmVuc1tlXTtkLl9jaGlsZHJlbk9iamVjdHNbZV09bmV3IGdbImRlZmF1bHQiXShkLGUsdCl9KSxkLl9hbGxvY2F0ZUxpc3RlbmVycygpLGZ9cmV0dXJuKDAseVsiZGVmYXVsdCJdKSh0LGUpLCgwLGZbImRlZmF1bHQiXSkodCxbe2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGJbImRlZmF1bHQiXSkoKDAsY1siZGVmYXVsdCJdKSh0LnByb3RvdHlwZSksIl9hbGxvY2F0ZUxpc3RlbmVycyIsdGhpcykuY2FsbCh0aGlzKTt2YXIgZT10aGlzO2UuX2NoYW5nZUxpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl91cmwrIi9jaGFuZ2VzIixmdW5jdGlvbih0KXsidXBkYXRlIj09PXQudHlwZSYmKGNvbnNvbGUubG9nKCJEYXRhT2JqZWN0T2JzZXJ2ZXItIitlLl91cmwrIi1SQ1Y6ICIsdCksZS5fY2hhbmdlT2JqZWN0KGUuX3N5bmNPYmosdCkpfSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxiWyJkZWZhdWx0Il0pKCgwLGNbImRlZmF1bHQiXSkodC5wcm90b3R5cGUpLCJfcmVsZWFzZUxpc3RlbmVycyIsdGhpcykuY2FsbCh0aGlzKTt2YXIgZT10aGlzO2UuX2NoYW5nZUxpc3RlbmVyLnJlbW92ZSgpfX0se2tleToiZGVsZXRlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fcmVsZWFzZUxpc3RlbmVycygpLGRlbGV0ZSBlLl9zeW5jaGVyLl9vYnNlcnZlcnNbZS5fdXJsXX19LHtrZXk6InVuc3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17dHlwZToidW5zdWJzY3JpYmUiLGZyb206ZS5fb3duZXIsdG86ZS5fc3luY2hlci5fc3ViVVJMLGJvZHk6e3Jlc291cmNlOmUuX3VybH19O2UuX2J1cy5wb3N0TWVzc2FnZSh0LGZ1bmN0aW9uKHQpe2NvbnNvbGUubG9nKCJEYXRhT2JqZWN0T2JzZXJ2ZXItVU5TVUJTQ1JJQkU6ICIsdCksMjAwPT09dC5ib2R5LmNvZGUmJihlLl9yZWxlYXNlTGlzdGVuZXJzKCksZGVsZXRlIGUuX3N5bmNoZXIuX29ic2VydmVyc1tlLl91cmxdKX0pfX0se2tleToib25DaGFuZ2UiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9ZSxuPXt0eXBlOncuRVhBQ1QsY2FsbGJhY2s6dH0sbz1lLmluZGV4T2YoIioiKTtvPT09ZS5sZW5ndGgtMSYmKDA9PT1vP24udHlwZT13LkFOWToobi50eXBlPXcuU1RBUlQscj1lLnN1YnN0cigwLGUubGVuZ3RoLTEpKSksdGhpcy5fZmlsdGVyc1tyXT1ufX0se2tleToiX29uRmlsdGVyIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzOygwLGlbImRlZmF1bHQiXSkodC5fZmlsdGVycykuZm9yRWFjaChmdW5jdGlvbihyKXt2YXIgbj10Ll9maWx0ZXJzW3JdO24udHlwZT09PXcuQU5ZP24uY2FsbGJhY2soZSk6bi50eXBlPT09dy5TVEFSVD8wPT09ZS5maWVsZC5pbmRleE9mKHIpJiZuLmNhbGxiYWNrKGUpOm4udHlwZT09PXcuRVhBQ1QmJmUuZmllbGQ9PT1yJiZuLmNhbGxiYWNrKGUpfSl9fV0pLHR9KGpbImRlZmF1bHQiXSk7clsiZGVmYXVsdCJdPU8sdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyIuL0RhdGFPYmplY3QiOjExNiwiLi9EYXRhT2JqZWN0Q2hpbGQiOjExNywiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIjo2LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjcsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MTIsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MTMsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQiOjE0LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiOjE1LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI6MTZ9XSwxMTk6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIiksaT1uKG8pLHM9ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIiksYz1uKHMpLGE9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksdT1uKGEpLGw9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksZj1uKGwpLGQ9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iKSxwPW4oZCksXz1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvZ2V0IiksYj1uKF8pLGg9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzIikseT1uKGgpLHY9ZSgiLi9EYXRhT2JqZWN0Iiksaj1uKHYpLG09ZSgiLi4vdXRpbHMvdXRpbHMuanMiKSxnPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyLG4sbyxpLHMpeygwLHVbImRlZmF1bHQiXSkodGhpcyx0KTt2YXIgYT0oMCxwWyJkZWZhdWx0Il0pKHRoaXMsKDAsY1siZGVmYXVsdCJdKSh0KS5jYWxsKHRoaXMsZSxyLG4sbyxpLHMpKSxsPWE7cmV0dXJuIGwuX3N1YnNjcmlwdGlvbnM9e30sbC5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKCJEYXRhT2JqZWN0UmVwb3J0ZXItIityKyItU0VORDogIixlKSxsLl9vbkNoYW5nZShlKX0pLGwuX2FsbG9jYXRlTGlzdGVuZXJzKCksYX1yZXR1cm4oMCx5WyJkZWZhdWx0Il0pKHQsZSksKDAsZlsiZGVmYXVsdCJdKSh0LFt7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsYlsiZGVmYXVsdCJdKSgoMCxjWyJkZWZhdWx0Il0pKHQucHJvdG90eXBlKSwiX2FsbG9jYXRlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fcmVzcG9uc2VMaXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fdXJsLGZ1bmN0aW9uKHQpeyJyZXNwb25zZSI9PT10LnR5cGUmJmUuX29uUmVzcG9uc2UodCl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGJbImRlZmF1bHQiXSkoKDAsY1siZGVmYXVsdCJdKSh0LnByb3RvdHlwZSksIl9yZWxlYXNlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fcmVzcG9uc2VMaXN0ZW5lci5yZW1vdmUoKX19LHtrZXk6Imludml0ZU9ic2VydmVycyIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOiJjcmVhdGUiLGZyb206dC5fc3luY2hlci5fb3duZXIsdG86dC5fc3luY2hlci5fc3ViVVJMLGJvZHk6e3Jlc291cmNlOnQuX3VybCxzY2hlbWE6dC5fc2NoZW1hLHZhbHVlOnQuX3N5bmNPYmouZGF0YSxhdXRob3Jpc2U6ZX19O3QuX2J1cy5wb3N0TWVzc2FnZShyKX19LHtrZXk6ImRlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9e3R5cGU6ImRlbGV0ZSIsZnJvbTplLl9vd25lcix0bzplLl9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6ZS5fdXJsfX07ZS5fYnVzLnBvc3RNZXNzYWdlKHQsZnVuY3Rpb24odCl7Y29uc29sZS5sb2coIkRhdGFPYmplY3RSZXBvcnRlci1ERUxFVEU6ICIsdCksMjAwPT09dC5ib2R5LmNvZGUmJihlLl9yZWxlYXNlTGlzdGVuZXJzKCksZGVsZXRlIGUuX3N5bmNoZXIuX3JlcG9ydGVyc1tlLl91cmxdKX0pfX0se2tleToib25TdWJzY3JpcHRpb24iLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uU3Vic2NyaXB0aW9uSGFuZGxlcj1lfX0se2tleToib25SZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25SZXNwb25zZUhhbmRsZXI9ZX19LHtrZXk6Il9vbkZvcndhcmQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7c3dpdGNoKGNvbnNvbGUubG9nKCJEYXRhT2JqZWN0UmVwb3J0ZXItUkNWOiAiLGUpLGUuYm9keS50eXBlKXtjYXNlInN1YnNjcmliZSI6dC5fb25TdWJzY3JpYmUoZSk7YnJlYWs7Y2FzZSJ1bnN1YnNjcmliZSI6dC5fb25VblN1YnNjcmliZShlKX19fSx7a2V5OiJfb25TdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkuZnJvbSxuPXt0eXBlOmUuYm9keS50eXBlLHVybDpyLGFjY2VwdDpmdW5jdGlvbigpe3ZhciBuPXt1cmw6cixzdGF0dXM6Im9uIn07dC5fc3Vic2NyaXB0aW9uc1tyXT1uO3ZhciBvPXt9O3JldHVybigwLGlbImRlZmF1bHQiXSkodC5fY2hpbGRyZW5PYmplY3RzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciByPXQuX2NoaWxkcmVuT2JqZWN0c1tlXS5kYXRhO29bZV09KDAsbS5kZWVwQ2xvbmUpKHIpfSksdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6MjAwLHNjaGVtYTp0Ll9zY2hlbWEsdmVyc2lvbjp0Ll92ZXJzaW9uLHZhbHVlOntkYXRhOigwLG0uZGVlcENsb25lKSh0LmRhdGEpLGNoaWxkcmVuczpvfX19KSxufSxyZWplY3Q6ZnVuY3Rpb24ocil7dC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6NDAzLGRlc2M6cn19KX19O3QuX29uU3Vic2NyaXB0aW9uSGFuZGxlciYmKGNvbnNvbGUubG9nKCJTVUJTQ1JJUFRJT04tRVZFTlQ6ICIsbiksdC5fb25TdWJzY3JpcHRpb25IYW5kbGVyKG4pKX19LHtrZXk6Il9vblVuU3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LmZyb20sbj10Ll9zdWJzY3JpcHRpb25zW3JdO2RlbGV0ZSB0Ll9zdWJzY3JpcHRpb25zW3JdO3ZhciBvPXt0eXBlOmUuYm9keS50eXBlLHVybDpyLG9iamVjdDpufTt0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXImJihjb25zb2xlLmxvZygiVU4tU1VCU0NSSVBUSU9OLUVWRU5UOiAiLG8pLHQuX29uU3Vic2NyaXB0aW9uSGFuZGxlcihvKSl9fSx7a2V5OiJfb25SZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOmUudHlwZSx1cmw6ZS5mcm9tLGNvZGU6ZS5ib2R5LmNvZGV9O3QuX29uUmVzcG9uc2VIYW5kbGVyJiYoY29uc29sZS5sb2coIlJFU1BPTlNFLUVWRU5UOiAiLHIpLHQuX29uUmVzcG9uc2VIYW5kbGVyKHIpKX19LHtrZXk6InN1YnNjcmlwdGlvbnMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdWJzY3JpcHRpb25zfX1dKSx0fShqWyJkZWZhdWx0Il0pO3JbImRlZmF1bHQiXT1nLHQuZXhwb3J0cz1yWyJkZWZhdWx0Il19LHsiLi4vdXRpbHMvdXRpbHMuanMiOjEyMywiLi9EYXRhT2JqZWN0IjoxMTYsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiI6NiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjo3LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvZ2V0IjoxNCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzIjoxNSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iOjE2fV0sMTIwOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLGk9bihvKSxzPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGM9bihzKSxhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbixvKXsoMCxpWyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIHM9dGhpcztzLl9vd25lcj10LHMuX3VybD1yLHMuX2J1cz1uLHMuX2NoaWxkcmVuPW8scy5fY2hhbmdlcz1bXSxzLl9hbGxvY2F0ZUxpc3RlbmVycygpfXJldHVybigwLGNbImRlZmF1bHQiXSkoZSxbe2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fbGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCxmdW5jdGlvbih0KXtjb25zb2xlLmxvZygiRGF0YVByb3Zpc2lvbmFsLSIrZS5fdXJsKyItUkNWOiAiLHQpLGUuX2NoYW5nZXMucHVzaCh0KX0pfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9saXN0ZW5lci5yZW1vdmUoKX19LHtrZXk6ImFwcGx5Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX2NoYW5nZXMuZm9yRWFjaChmdW5jdGlvbih0KXtlLl9jaGFuZ2VPYmplY3QoZS5fc3luY09iaix0KX0pfX0se2tleToiY2hpbGRyZW4iLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZHJlbn19XSksZX0oKTtyWyJkZWZhdWx0Il09YSx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7ImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI6MTIsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI6MTN9XSwxMjE6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5PYmplY3RUeXBlPXIuQ2hhbmdlVHlwZT12b2lkIDA7dmFyIG89ZSgiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIiksaT1uKG8pLHM9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksYz1uKHMpLGE9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksdT1uKGEpLGw9ZSgiLi4vdXRpbHMvdXRpbHMuanMiKSxmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXsoMCxjWyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIHI9dGhpcztyLl9vYnNlcnZlcnM9W10sci5fZmlsdGVycz17fSx0P3IuX2RhdGE9KDAsbC5kZWVwQ2xvbmUpKHQpOnIuX2RhdGE9e30sci5faW50ZXJuYWxPYnNlcnZlKG5ldyBkLHIuX2RhdGEpfXJldHVybigwLHVbImRlZmF1bHQiXSkoZSxbe2tleToib2JzZXJ2ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb2JzZXJ2ZXJzLnB1c2goZSl9fSx7a2V5OiJmaW5kIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lLnNwbGl0KCIuIik7cmV0dXJuIHRoaXMuX2ZpbmRXaXRoU3BsaXQodCl9fSx7a2V5OiJmaW5kQmVmb3JlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD17fSxyPWUuc3BsaXQoIi4iKTtyZXR1cm4gdC5sYXN0PXIucG9wKCksdC5vYmo9dGhpcy5fZmluZFdpdGhTcGxpdChyKSx0fX0se2tleToiX2ZpbmRXaXRoU3BsaXQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2RhdGE7cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbihlKXt0PXRbZV19KSx0fX0se2tleToiX2ZpcmVFdmVudCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb2JzZXJ2ZXJzLmZvckVhY2goZnVuY3Rpb24odCl7dChlKX0pfX0se2tleToiX2lzT2JzZXJ2YWJsZSIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuY29uc3RydWN0b3I9PT1PYmplY3R8fGUuY29uc3RydWN0b3I9PT1BcnJheX19LHtrZXk6Il9pbnRlcm5hbE9ic2VydmUiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztpZihyLl9pc09ic2VydmFibGUodCkpe3ZhciBuPWZ1bmN0aW9uKHQpe3IuX29uQ2hhbmdlcyhlLHQpfTtpZih0LmNvbnN0cnVjdG9yPT09T2JqZWN0KXtPYmplY3Qub2JzZXJ2ZSh0LG4pO2Zvcih2YXIgbyBpbiB0KXIuX2lzT2JzZXJ2YWJsZSh0W29dKSYmci5faW50ZXJuYWxPYnNlcnZlKGVbIm5ldyJdKG8pLHRbb10pfWVsc2UgaWYodC5jb25zdHJ1Y3Rvcj09PUFycmF5KXtBcnJheS5vYnNlcnZlKHQsbik7Zm9yKHZhciBpIGluIHQpaWYoci5faXNPYnNlcnZhYmxlKHRbaV0pKXt2YXIgcz1lWyJuZXciXShuZXcgcCh0W2ldLGkpKTtyLl9pbnRlcm5hbE9ic2VydmUocyx0W2ldKX19fX19LHtrZXk6Il9vbkNoYW5nZXMiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztmb3IodmFyIG4gaW4gdCl7dmFyIG89dFtuXS5vYmplY3QsaT12b2lkIDA7aWYoby5jb25zdHJ1Y3Rvcj09PU9iamVjdCYmKGk9Yi5PQkpFQ1QpLG8uY29uc3RydWN0b3I9PT1BcnJheSYmKGk9Yi5BUlJBWSksInNwbGljZSI9PT10W25dLnR5cGUpIWZ1bmN0aW9uKCl7dmFyIHM9dFtuXS5pbmRleCxjPWVbIm5ldyJdKCIiK3MpLGE9Yy50b1N0cmluZygpLHU9dFtuXS5yZW1vdmVkLmxlbmd0aDtpZigwIT09dSl7dmFyIGY9dFtuXS5yZW1vdmVkO2YuZm9yRWFjaChmdW5jdGlvbih0LG4pe3IuX2lzT2JzZXJ2YWJsZSh0KSYmZS5yZW1vdmVJbmRleChzK24pfSksci5fZmlyZUV2ZW50KHtjVHlwZTpfLlJFTU9WRSxvVHlwZTppLGZpZWxkOmEsZGF0YTp1fSl9dmFyIGQ9dFtuXS5hZGRlZENvdW50O2lmKDAhPT1kKXt2YXIgYj1vLnNsaWNlKHMscytkKTtiLmZvckVhY2goZnVuY3Rpb24odCxuKXtpZihyLl9pc09ic2VydmFibGUodCkpe3ZhciBvPWVbIm5ldyJdKG5ldyBwKHQscytuKSk7ci5faW50ZXJuYWxPYnNlcnZlKG8sdCl9fSksci5fZmlyZUV2ZW50KHtjVHlwZTpfLkFERCxvVHlwZTppLGZpZWxkOmEsZGF0YTooMCxsLmRlZXBDbG9uZSkoYil9KX1zIT09by5sZW5ndGgtMSYmZS5yZUluZGV4RnJvbShvKX0oKTtlbHNle3ZhciBzPWVbIm5ldyJdKHRbbl0ubmFtZSksYz1zLnRvU3RyaW5nKCk7aWYoLTEhPT1jLmluZGV4T2YoIlN5bWJvbCIpKWNvbnRpbnVlO3ZhciBhPW9bdFtuXS5uYW1lXTsidXBkYXRlIj09PXRbbl0udHlwZSYmdGhpcy5fZmlyZUV2ZW50KHtjVHlwZTpfLlVQREFURSxvVHlwZTppLGZpZWxkOmMsZGF0YTooMCxsLmRlZXBDbG9uZSkoYSl9KSwiYWRkIj09PXRbbl0udHlwZSYmKHRoaXMuX2ludGVybmFsT2JzZXJ2ZShzLGEpLHRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6Xy5BREQsb1R5cGU6aSxmaWVsZDpjLGRhdGE6KDAsbC5kZWVwQ2xvbmUpKGEpfSkpLCJkZWxldGUiPT09dFtuXS50eXBlJiZ0aGlzLl9maXJlRXZlbnQoe2NUeXBlOl8uUkVNT1ZFLG9UeXBlOmksZmllbGQ6Y30pfX19fSx7a2V5OiJkYXRhIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YX19XSksZX0oKSxkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpeygwLGNbImRlZmF1bHQiXSkodGhpcyxlKSx0aGlzLl9wYXRoPVtdLHRoaXMuX29ic2VydmFibGVzPXt9fXJldHVybigwLHVbImRlZmF1bHQiXSkoZSxbe2tleToicmVtb3ZlSW5kZXgiLHZhbHVlOmZ1bmN0aW9uKGUpe2RlbGV0ZSB0aGlzLl9vYnNlcnZhYmxlc1tlXX19LHtrZXk6InJlSW5kZXhGcm9tIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzOygwLGlbImRlZmF1bHQiXSkodGhpcy5fb2JzZXJ2YWJsZXMpLmZvckVhY2goZnVuY3Rpb24ocil7dmFyIG49dC5fb2JzZXJ2YWJsZXNbcl0sbz1lLmluZGV4T2Yobi5vYmopO24uaWR4IT1vJiYobi5pZHg9byxkZWxldGUgdC5fb2JzZXJ2YWJsZXNbcl0sDQp0Ll9vYnNlcnZhYmxlc1tvXT1uKX0pfX0se2tleToibmV3Iix2YWx1ZTpmdW5jdGlvbihlKXtlLmNvbnN0cnVjdG9yPT1wJiYodGhpcy5fb2JzZXJ2YWJsZXNbZS5pZHhdPWUpO3ZhciB0PXRoaXMuY2xvbmUoKTtyZXR1cm4gdC5fcGF0aC5wdXNoKGUpLHR9fSx7a2V5OiJjbG9uZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1uZXcgZTtyZXR1cm4gdGhpcy5fcGF0aC5mb3JFYWNoKGZ1bmN0aW9uKGUpe3QuX3BhdGgucHVzaChlKX0pLHR9fSx7a2V5OiJ0b1N0cmluZyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT0iIjtyZXR1cm4gdGhpcy5fcGF0aC5mb3JFYWNoKGZ1bmN0aW9uKHQscil7MD09PXI/ZT10LnRvU3RyaW5nKCk6ZSs9Ii4iK3QudG9TdHJpbmcoKX0pLGV9fV0pLGV9KCkscD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyKXsoMCxjWyJkZWZhdWx0Il0pKHRoaXMsZSksdGhpcy5vYmo9dCx0aGlzLmlkeD1yfXJldHVybigwLHVbImRlZmF1bHQiXSkoZSxbe2tleToidG9TdHJpbmciLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaWR4LnRvU3RyaW5nKCl9fV0pLGV9KCksXz1yLkNoYW5nZVR5cGU9e1VQREFURToidXBkYXRlIixBREQ6ImFkZCIsUkVNT1ZFOiJyZW1vdmUifSxiPXIuT2JqZWN0VHlwZT17T0JKRUNUOiJvYmplY3QiLEFSUkFZOiJhcnJheSJ9O3JbImRlZmF1bHQiXT1mfSx7Ii4uL3V0aWxzL3V0aWxzLmpzIjoxMjMsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyI6NywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxM31dLDEyMjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSIpLGk9bihvKSxzPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLGM9bihzKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLHU9bihhKSxsPWUoIi4vRGF0YU9iamVjdFJlcG9ydGVyIiksZj1uKGwpLGQ9ZSgiLi9EYXRhT2JqZWN0T2JzZXJ2ZXIiKSxwPW4oZCksXz1lKCIuL0RhdGFQcm92aXNpb25hbCIpLGI9bihfKSxoPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbil7KDAsY1siZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciBvPXRoaXM7by5fb3duZXI9dCxvLl9idXM9cixvLl9zdWJVUkw9bi5ydW50aW1lVVJMKyIvc20iLG8uX3JlcG9ydGVycz17fSxvLl9vYnNlcnZlcnM9e30sby5fcHJvdmlzaW9uYWxzPXt9LHIuYWRkTGlzdGVuZXIodCxmdW5jdGlvbihlKXtpZihlLmZyb20hPT10KXN3aXRjaChjb25zb2xlLmxvZygiU3luY2hlci1SQ1Y6ICIsZSksZS50eXBlKXtjYXNlImZvcndhcmQiOm8uX29uRm9yd2FyZChlKTticmVhaztjYXNlImNyZWF0ZSI6by5fb25SZW1vdGVDcmVhdGUoZSk7YnJlYWs7Y2FzZSJkZWxldGUiOm8uX29uUmVtb3RlRGVsZXRlKGUpfX0pfXJldHVybigwLHVbImRlZmF1bHQiXSkoZSxbe2tleToiY3JlYXRlIix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49dGhpcztyLnJlcG9ydGVyPW4uX293bmVyLHIuc2NoZW1hPWU7dmFyIG89e3R5cGU6ImNyZWF0ZSIsZnJvbTpuLl9vd25lcix0bzpuLl9zdWJVUkwsYm9keTp7c2NoZW1hOmUsdmFsdWU6cixhdXRob3Jpc2U6dH19O3JldHVybiBuZXcgaVsiZGVmYXVsdCJdKGZ1bmN0aW9uKHQsaSl7bi5fYnVzLnBvc3RNZXNzYWdlKG8sZnVuY3Rpb24obyl7aWYoY29uc29sZS5sb2coImNyZWF0ZS1yZXNwb25zZTogIixvKSwyMDA9PT1vLmJvZHkuY29kZSl7dmFyIHM9by5ib2R5LnJlc291cmNlLGM9bmV3IGZbImRlZmF1bHQiXShuLHMsZSwib24iLHIsby5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKTtuLl9yZXBvcnRlcnNbc109Yyx0KGMpfWVsc2UgaShvLmJvZHkuZGVzYyl9KX0pfX0se2tleToic3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj17dHlwZToic3Vic2NyaWJlIixmcm9tOnIuX293bmVyLHRvOnIuX3N1YlVSTCxib2R5OntzY2hlbWE6ZSxyZXNvdXJjZTp0fX07cmV0dXJuIG5ldyBpWyJkZWZhdWx0Il0oZnVuY3Rpb24obyxpKXtyLl9idXMucG9zdE1lc3NhZ2UobixmdW5jdGlvbihuKXtjb25zb2xlLmxvZygic3Vic2NyaWJlLXJlc3BvbnNlOiAiLG4pO3ZhciBzPXIuX3Byb3Zpc2lvbmFsc1t0XTtpZihkZWxldGUgci5fcHJvdmlzaW9uYWxzW3RdLHMmJnMuX3JlbGVhc2VMaXN0ZW5lcnMoKSxuLmJvZHkuY29kZTwyMDApcz1uZXcgYlsiZGVmYXVsdCJdKHIuX293bmVyLHQsci5fYnVzLG4uYm9keS5jaGlsZHJlblJlc291cmNlcyksci5fcHJvdmlzaW9uYWxzW3RdPXM7ZWxzZSBpZigyMDA9PT1uLmJvZHkuY29kZSl7dmFyIGM9bmV3IHBbImRlZmF1bHQiXShyLHQsZSwib24iLG4uYm9keS52YWx1ZSxzLmNoaWxkcmVuLG4uYm9keS52ZXJzaW9uKTtyLl9vYnNlcnZlcnNbdF09YyxvKGMpLHMuYXBwbHkoYyl9ZWxzZSBpKG4uYm9keS5kZXNjKX0pfSl9fSx7a2V5OiJvbk5vdGlmaWNhdGlvbiIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25Ob3RpZmljYXRpb25IYW5kbGVyPWV9fSx7a2V5OiJfb25Gb3J3YXJkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9dC5fcmVwb3J0ZXJzW2UuYm9keS50b107ci5fb25Gb3J3YXJkKGUpfX0se2tleToiX29uUmVtb3RlQ3JlYXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5mcm9tLnNsaWNlKDAsLTEzKSxuPXt0eXBlOmUudHlwZSxmcm9tOmUuYm9keS5zb3VyY2UsdXJsOnIsc2NoZW1hOmUuYm9keS5zY2hlbWEsdmFsdWU6ZS5ib2R5LnZhbHVlLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eSxhY2s6ZnVuY3Rpb24ocil7dmFyIG49MjAwO3ImJihuPXIpLHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOm59fSl9fTt0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXImJihjb25zb2xlLmxvZygiTk9USUZJQ0FUSU9OLUVWRU5UOiAiLG4pLHQuX29uTm90aWZpY2F0aW9uSGFuZGxlcihuKSl9fSx7a2V5OiJfb25SZW1vdGVEZWxldGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkucmVzb3VyY2Usbj10Ll9vYnNlcnZlcnNbcl07aWYobil7dmFyIG89e3R5cGU6ZS50eXBlLHVybDpyLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eSxhY2s6ZnVuY3Rpb24ocil7dmFyIG89MjAwO3ImJihvPXIpLDIwMD09PW8mJm5bImRlbGV0ZSJdKCksdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6byxzb3VyY2U6dC5fb3duZXJ9fSl9fTt0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXImJihjb25zb2xlLmxvZygiTk9USUZJQ0FUSU9OLUVWRU5UOiAiLG8pLHQuX29uTm90aWZpY2F0aW9uSGFuZGxlcihvKSl9ZWxzZSB0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDQsc291cmNlOnQuX293bmVyfX0pfX0se2tleToib3duZXIiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vd25lcn19LHtrZXk6InJlcG9ydGVycyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlcG9ydGVyc319LHtrZXk6Im9ic2VydmVycyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX29ic2VydmVyc319XSksZX0oKTtyWyJkZWZhdWx0Il09aCx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4vRGF0YU9iamVjdE9ic2VydmVyIjoxMTgsIi4vRGF0YU9iamVjdFJlcG9ydGVyIjoxMTksIi4vRGF0YVByb3Zpc2lvbmFsIjoxMjAsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIjo5LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTIzOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19ZnVuY3Rpb24gbyhlKXt2YXIgdD0vKFthLXpBLVotXSopOlwvXC8oPzpcLik/KFstYS16QS1aMC05QDolLl9cK34jPV17MiwyNTZ9KShbLWEtekEtWjAtOUA6JS5fXCt+Iz1cL10qKS9naSxyPSIkMSwkMiwkMyIsbj1lLnJlcGxhY2UodCxyKS5zcGxpdCgiLCIpO25bMF09PT1lJiYoblswXT0iaHR0cHMiLG5bMV09ZSk7dmFyIG89e3R5cGU6blswXSxkb21haW46blsxXSxpZGVudGl0eTpuWzJdfTtyZXR1cm4gb31mdW5jdGlvbiBpKGUpe3JldHVybiBlP0pTT04ucGFyc2UoKDAsY1siZGVmYXVsdCJdKShlKSk6dm9pZCAwfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgcz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkiKSxjPW4ocyk7ci5kaXZpZGVVUkw9byxyLmRlZXBDbG9uZT1pfSx7ImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeSI6Mn1dfSx7fSxbMTE1XSkoMTE1KX0pOwp9KS5jYWxsKHRoaXMsdHlwZW9mIGdsb2JhbCAhPT0gInVuZGVmaW5lZCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gInVuZGVmaW5lZCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gInVuZGVmaW5lZCIgPyB3aW5kb3cgOiB7fSkKfSx7fV0sMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7Cid1c2Ugc3RyaWN0JzsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKCnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoInZhbHVlIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpOwoKZXhwb3J0cy5kZWZhdWx0ID0gYWN0aXZhdGU7Cgp2YXIgX1N5bmNoZXIgPSByZXF1aXJlKCdzZXJ2aWNlLWZyYW1ld29yay9kaXN0L1N5bmNoZXInKTsKCnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy91dGlscycpOwoKdmFyIF9FdmVudEVtaXR0ZXIyID0gcmVxdWlyZSgnLi4vdXRpbHMvRXZlbnRFbWl0dGVyJyk7Cgp2YXIgX0V2ZW50RW1pdHRlcjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9FdmVudEVtaXR0ZXIyKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikgPyBjYWxsIDogc2VsZjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH0gLyoganNoaW50IHVuZGVmOiB0cnVlICovCgovKioNCiogSGVsbG8gV29ybGQgT2JzZXJ2ZXINCiogQGF1dGhvciBQYXVsbyBDaGFpbmhvIFtwYXVsby1nLWNoYWluaG9AdGVsZWNvbS5wdF0NCiogQHZlcnNpb24gMC4xLjANCiovCgp2YXIgSGVsbG9Xb3JsZE9ic2VydmVyID0gZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHsKICBfaW5oZXJpdHMoSGVsbG9Xb3JsZE9ic2VydmVyLCBfRXZlbnRFbWl0dGVyKTsKCiAgLyoqDQogICogQ3JlYXRlIGEgbmV3IEhlbGxvV29ybGRPYnNlcnZlcg0KICAqIEBwYXJhbSAge1N5bmNoZXJ9IHN5bmNoZXIgLSBTeW5jaGVyIHByb3ZpZGVkIGZyb20gdGhlIHJ1bnRpbWUgY29yZQ0KICAqLwoKICBmdW5jdGlvbiBIZWxsb1dvcmxkT2JzZXJ2ZXIoaHlwZXJ0eVVSTCwgYnVzLCBjb25maWd1cmF0aW9uKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSGVsbG9Xb3JsZE9ic2VydmVyKTsKCiAgICBpZiAoIWh5cGVydHlVUkwpIHRocm93IG5ldyBFcnJvcignVGhlIGh5cGVydHlVUkwgaXMgYSBuZWVkZWQgcGFyYW1ldGVyJyk7CiAgICBpZiAoIWJ1cykgdGhyb3cgbmV3IEVycm9yKCdUaGUgTWluaUJ1cyBpcyBhIG5lZWRlZCBwYXJhbWV0ZXInKTsKICAgIGlmICghY29uZmlndXJhdGlvbikgdGhyb3cgbmV3IEVycm9yKCdUaGUgY29uZmlndXJhdGlvbiBpcyBhIG5lZWRlZCBwYXJhbWV0ZXInKTsKCiAgICB2YXIgX3RoaXMyID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgT2JqZWN0LmdldFByb3RvdHlwZU9mKEhlbGxvV29ybGRPYnNlcnZlcikuY2FsbCh0aGlzKSk7CgogICAgdmFyIF90aGlzID0gX3RoaXMyOwogICAgX3RoaXMuX2RvbWFpbiA9ICgwLCBfdXRpbHMuZGl2aWRlVVJMKShoeXBlcnR5VVJMKS5kb21haW47CgogICAgX3RoaXMuX29iamVjdERlc2NVUkwgPSAnaHlwZXJ0eS1jYXRhbG9ndWU6Ly8nICsgX3RoaXMuX2RvbWFpbiArICcvLndlbGwta25vd24vZGF0YXNjaGVtYXMvSGVsbG9Xb3JsZERhdGFTY2hlbWEnOwoKICAgIHZhciBkb21haW4gPSAoMCwgX3V0aWxzLmRpdmlkZVVSTCkoaHlwZXJ0eVVSTCkuZG9tYWluOwoKICAgIHZhciBzeW5jaGVyID0gbmV3IF9TeW5jaGVyLlN5bmNoZXIoaHlwZXJ0eVVSTCwgYnVzLCBjb25maWd1cmF0aW9uKTsKICAgIHN5bmNoZXIub25Ob3RpZmljYXRpb24oZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgIF90aGlzLl9vbk5vdGlmaWNhdGlvbihldmVudCk7CiAgICB9KTsKCiAgICBfdGhpcy5fc3luY2hlciA9IHN5bmNoZXI7CiAgICByZXR1cm4gX3RoaXMyOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEhlbGxvV29ybGRPYnNlcnZlciwgW3sKICAgIGtleTogJ19vbk5vdGlmaWNhdGlvbicsCiAgICB2YWx1ZTogZnVuY3Rpb24gX29uTm90aWZpY2F0aW9uKGV2ZW50KSB7CgogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgY29uc29sZS5pbmZvKCdFdmVudCBSZWNlaXZlZDogJywgZXZlbnQpOwoKICAgICAgX3RoaXMudHJpZ2dlcignaW52aXRhdGlvbicsIGV2ZW50LmlkZW50aXR5KTsKCiAgICAgIC8vIEFja25vd2xlZGdlIHJlcG9ydGVyIGFib3V0IHRoZSBJbnZpdGF0aW9uIHdhcyByZWNlaXZlZAogICAgICBldmVudC5hY2soKTsKCiAgICAgIC8vIFN1YnNjcmliZSBIZWxsbyBXb3JsZCBPYmplY3QKICAgICAgX3RoaXMuX3N5bmNoZXIuc3Vic2NyaWJlKF90aGlzLl9vYmplY3REZXNjVVJMLCBldmVudC51cmwpLnRoZW4oZnVuY3Rpb24gKGhlbGxvT2JqdE9ic2VydmVyKSB7CgogICAgICAgIC8vIEhlbGxvIFdvcmxkIE9iamVjdCB3YXMgc3Vic2NyaWJlZAogICAgICAgIGNvbnNvbGUuaW5mbyhoZWxsb09ianRPYnNlcnZlcik7CgogICAgICAgIC8vIGxldHMgbm90aWZ5IHRoZSBBcHAgdGhlIHN1YnNjcmlwdGlvbiB3YXMgYWNjZXB0ZWQgd2l0aCB0aGUgbW5vc3QgdXBkYXRlZCB2ZXJzaW9uIG9mIEhlbGxvIFdvcmxkIE9iamVjdAoKICAgICAgICBfdGhpcy50cmlnZ2VyKCdoZWxsbycsIGhlbGxvT2JqdE9ic2VydmVyLmRhdGEpOwoKICAgICAgICAvLyBsZXRzIG5vdyBvYnNlcnZlIGFueSBjaGFuZ2VzIGRvbmUgaW4gSGVsbG8gV29ybGQgT2JqZWN0CgogICAgICAgIGhlbGxvT2JqdE9ic2VydmVyLm9uQ2hhbmdlKCcqJywgZnVuY3Rpb24gKGV2ZW50KSB7CgogICAgICAgICAgLy8gSGVsbG8gV29ybGQgT2JqZWN0IHdhcyBjaGFuZ2VkCiAgICAgICAgICBjb25zb2xlLmluZm8oJ21lc3NhZ2UgcmVjZWl2ZWQ6JywgZXZlbnQpOwoKICAgICAgICAgIC8vIGxldHMgbm90aWZ5IHRoZSBBcHAgYWJvdXQgdGhlIGNoYW5nZQogICAgICAgICAgX3RoaXMudHJpZ2dlcignaGVsbG8nLCBoZWxsb09ianRPYnNlcnZlci5kYXRhKTsKICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlYXNvbikgewogICAgICAgIGNvbnNvbGUuZXJyb3IocmVhc29uKTsKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gSGVsbG9Xb3JsZE9ic2VydmVyOwp9KF9FdmVudEVtaXR0ZXIzLmRlZmF1bHQpOwoKZnVuY3Rpb24gYWN0aXZhdGUoaHlwZXJ0eVVSTCwgYnVzLCBjb25maWd1cmF0aW9uKSB7CgogIHJldHVybiB7CiAgICBuYW1lOiAnSGVsbG9Xb3JsZE9ic2VydmVyJywKICAgIGluc3RhbmNlOiBuZXcgSGVsbG9Xb3JsZE9ic2VydmVyKGh5cGVydHlVUkwsIGJ1cywgY29uZmlndXJhdGlvbikKICB9Owp9Cm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOwoKfSx7Ii4uL3V0aWxzL0V2ZW50RW1pdHRlciI6MywiLi4vdXRpbHMvdXRpbHMiOjQsInNlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvU3luY2hlciI6MX1dLDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewoidXNlIHN0cmljdCI7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7Cgp2YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTsKCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7IH0gfQoKLyoqDQoqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQQ0KKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRA0KKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0wNCiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlYNCiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBDQoqIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUcNCiogQ29weXJpZ2h0IDIwMTYgQXBpemVlDQoqIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElODQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKiovCgovKioNCiAqIEV2ZW50RW1pdHRlcg0KICogQWxsIGNsYXNzZXMgd2hpY2ggZXh0ZW5kcyB0aGlzLCBjYW4gaGF2ZSBhZGRFdmVudExpc3RlbmVyIGFuZCB0cmlnZ2VyIGV2ZW50czsNCiAqLwoKdmFyIEV2ZW50RW1pdHRlciA9IGZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRXZlbnRFbWl0dGVyKTsKICB9CgogIF9jcmVhdGVDbGFzcyhFdmVudEVtaXR0ZXIsIFt7CiAgICBrZXk6ICJhZGRFdmVudExpc3RlbmVyIiwKCgogICAgLyoqDQogICAgICogYWRkRXZlbnRMaXN0ZW5lciBsaXN0ZW4gZm9yIGFuIGV2ZW50VHlwZQ0KICAgICAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICBldmVudFR5cGUgLSBsaXN0ZW5pbmcgZm9yIHRoaXMgdHlwZSBvZiBldmVudA0KICAgICAqIEBwYXJhbSAge0Z1bmN0aW9ufSAgICAgICBjYiAgICAgICAgLSBjYWxsYmFjayBmdW5jdGlvbiB3aWxsIGJlIGV4ZWN1dGVkIHdoZW4gdGhlIGV2ZW50IGl0IGlzIGludm9rZWQNCiAgICAgKi8KICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgY2IpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgX3RoaXNbZXZlbnRUeXBlXSA9IGNiOwogICAgfQoKICAgIC8qKg0KICAgICAqIEludm9rZSB0aGUgZXZlbnRUeXBlDQogICAgICogQHBhcmFtICB7c3RyaW5nfSBldmVudFR5cGUgLSBldmVudCB3aWxsIGJlIGludm9rZWQNCiAgICAgKiBAcGFyYW0gIHtvYmplY3R9IHBhcmFtcyAtIHBhcmFtZXRlcnMgd2lsbCBiZSBwYXNzZWQgdG8gdGhlIGFkZEV2ZW50TGlzdGVuZXINCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAidHJpZ2dlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdHJpZ2dlcihldmVudFR5cGUsIHBhcmFtcykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKF90aGlzW2V2ZW50VHlwZV0pIHsKICAgICAgICBfdGhpc1tldmVudFR5cGVdKHBhcmFtcyk7CiAgICAgIH0KICAgIH0KICB9XSk7CgogIHJldHVybiBFdmVudEVtaXR0ZXI7Cn0oKTsKCmV4cG9ydHMuZGVmYXVsdCA9IEV2ZW50RW1pdHRlcjsKbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Cgp9LHt9XSw0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKJ3VzZSBzdHJpY3QnOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRpdmlkZVVSTCA9IGRpdmlkZVVSTDsKZXhwb3J0cy5kZWVwQ2xvbmUgPSBkZWVwQ2xvbmU7CmV4cG9ydHMuZ2V0Q29uZmlnID0gZ2V0Q29uZmlnOwpleHBvcnRzLmdldFVzZXJNZWRpYSA9IGdldFVzZXJNZWRpYTsKZXhwb3J0cy5zZXJpYWxpemUgPSBzZXJpYWxpemU7CmV4cG9ydHMuZ2V0VGVtcGxhdGUgPSBnZXRUZW1wbGF0ZTsKLyoqDQogKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0ENCiAqIENvcHlyaWdodCAyMDE2IElORVNDLUlEDQogKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0wNCiAqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WDQogKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0ENCiAqIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUcNCiAqIENvcHlyaWdodCAyMDE2IEFwaXplZQ0KICogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU4NCiAqDQogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4NCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KICoNCiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQogKg0KICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQogKiovCgovLyBqc2hpbnQgYnJvd3Nlcjp0cnVlLCBqcXVlcnk6IHRydWUKLy8ganNoaW50IHZhcnN0bXQ6IHRydWUKLyogZ2xvYmFsIEhhbmRsZWJhcnMgKi8KCi8qKg0KICogU3VwcG9ydCBtb2R1bGUgd2l0aCBzb21lIGZ1bmN0aW9ucyB3aWxsIGJlIHVzZWZ1bA0KICogQG1vZHVsZSB1dGlscw0KICovCgovKioNCiAqIEB0eXBlZGVmIGRpdmlkZVVSTA0KICogQHR5cGUgT2JqZWN0DQogKiBAcHJvcGVydHkge3N0cmluZ30gdHlwZSBUaGUgdHlwZSBvZiBVUkwNCiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBkb21haW4gVGhlIGRvbWFpbiBvZiBVUkwNCiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBpZGVudGl0eSBUaGUgaWRlbnRpdHkgb2YgVVJMDQogKi8KCi8qKg0KICogRGl2aWRlIGFuIHVybCBpbiB0eXBlLCBkb21haW4gYW5kIGlkZW50aXR5DQogKiBAcGFyYW0gIHtVUkwuVVJMfSB1cmwgLSB1cmwgYWRkcmVzcw0KICogQHJldHVybiB7ZGl2aWRlVVJMfSB0aGUgcmVzdWx0IG9mIGRpdmlkZVVSTA0KICovCmZ1bmN0aW9uIGRpdmlkZVVSTCh1cmwpIHsKCiAgLy8gbGV0IHJlID0gLyhbYS16QS1aLV0qKT86XC9cLyg/OlwuKT8oWy1hLXpBLVowLTlAOiUuX1wrfiM9XXsyLDI1Nn1cLlthLXpdezIsNn1cYikqKFwvW1wvXGRcd1wuLV0qKSooPzpbXD9dKSooLispKi9naTsKICB2YXIgcmUgPSAvKFthLXpBLVotXSopOlwvXC8oPzpcLik/KFstYS16QS1aMC05QDolLl9cK34jPV17MiwyNTZ9KShbLWEtekEtWjAtOUA6JS5fXCt+Iz1cL10qKS9naTsKICB2YXIgc3Vic3QgPSAnJDEsJDIsJDMnOwogIHZhciBwYXJ0cyA9IHVybC5yZXBsYWNlKHJlLCBzdWJzdCkuc3BsaXQoJywnKTsKCiAgLy8gSWYgdGhlIHVybCBoYXMgbm8gcHJvdG9jb2wsIHRoZSBkZWZhdWx0IHByb3RvY29sIHNldCBpcyBodHRwcwogIGlmIChwYXJ0c1swXSA9PT0gdXJsKSB7CiAgICBwYXJ0c1swXSA9ICdodHRwcyc7CiAgICBwYXJ0c1sxXSA9IHVybDsKICB9CgogIHZhciByZXN1bHQgPSB7CiAgICB0eXBlOiBwYXJ0c1swXSwKICAgIGRvbWFpbjogcGFydHNbMV0sCiAgICBpZGVudGl0eTogcGFydHNbMl0KICB9OwoKICByZXR1cm4gcmVzdWx0Owp9CgovKioNCiAqIE1ha2UgYSBDT1BZIG9mIHRoZSBvcmlnaW5hbCBkYXRhDQogKiBAcGFyYW0gIHtPYmplY3R9ICBvYmogLSBvYmplY3QgdG8gYmUgY2xvbmVkDQogKiBAcmV0dXJuIHtPYmplY3R9DQogKi8KZnVuY3Rpb24gZGVlcENsb25lKG9iaikgewogIC8vVE9ETzogc2ltcGxlIGJ1dCBpbmVmZmljaWVudCBKU09OIGRlZXAgY2xvbmUuLi4KICBpZiAob2JqKSByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmopKTsKfQoKLyoqDQogKiBHZXQgdGhlIGNvbmZpZ3VyYXRpb24gZnJvbSBhbiBqc29uIGZpbGU7DQogKiBAcGFyYW0gIHtKU09OT2JqZWN0fSBqc29uRmlsZQ0KICogQHJldHVybiB7b2JqZWN0fQ0KICovCmZ1bmN0aW9uIGdldENvbmZpZyhKU09OT2JqZWN0KSB7CiAgY29uc29sZS5sb2coJ2RldmVsb3BtZW50Jyk7CiAgcmV0dXJuIEpTT05PYmplY3RbJ2RldmVsb3BtZW50J107Cn0KCi8qKg0KICogR2V0IFdlYlJUQyBBUEkgcmVzb3VyY2VzDQogKiBAcGFyYW0gIHtPYmplY3R9ICAgICBvcHRpb25zIE9iamVjdCBjb250YWluaW5nIHRoZSBpbmZvcm1hdGlvbiB0aGF0IHJlc291cmNlcyB3aWxsIGJlIHVzZWQgKGNhbWVyYSwgbWljLCByZXNvbHV0aW9uLCBldGMpOw0KICogQHJldHVybiB7UHJvbWlzZX0NCiAqLwpmdW5jdGlvbiBnZXRVc2VyTWVkaWEoY29uc3RyYWludHMpIHsKCiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKCiAgICBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYShjb25zdHJhaW50cykudGhlbihmdW5jdGlvbiAobWVkaWFTdHJlYW0pIHsKICAgICAgcmVzb2x2ZShtZWRpYVN0cmVhbSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVhc29uKSB7CiAgICAgIHJlamVjdChyZWFzb24pOwogICAgfSk7CiAgfSk7Cn0KCmZ1bmN0aW9uIHNlcmlhbGl6ZSgpIHsKCiAgJC5mbi5zZXJpYWxpemVPYmplY3QgPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgbyA9IHt9OwogICAgdmFyIGEgPSB0aGlzLnNlcmlhbGl6ZUFycmF5KCk7CiAgICAkLmVhY2goYSwgZnVuY3Rpb24gKCkgewogICAgICBpZiAob1t0aGlzLm5hbWVdICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBpZiAoIW9bdGhpcy5uYW1lXS5wdXNoKSB7CiAgICAgICAgICBvW3RoaXMubmFtZV0gPSBbb1t0aGlzLm5hbWVdXTsKICAgICAgICB9CgogICAgICAgIG9bdGhpcy5uYW1lXS5wdXNoKHRoaXMudmFsdWUgfHwgJycpOwogICAgICB9IGVsc2UgewogICAgICAgIG9bdGhpcy5uYW1lXSA9IHRoaXMudmFsdWUgfHwgJyc7CiAgICAgIH0KICAgIH0pOwoKICAgIHJldHVybiBvOwogIH07CgogICQuZm4uc2VyaWFsaXplT2JqZWN0QXJyYXkgPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgbyA9IHt9OwogICAgdmFyIGEgPSB0aGlzLnNlcmlhbGl6ZUFycmF5KCk7CiAgICAkLmVhY2goYSwgZnVuY3Rpb24gKCkgewogICAgICBpZiAob1t0aGlzLm5hbWVdICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBpZiAoIW9bdGhpcy5uYW1lXS5wdXNoKSB7CiAgICAgICAgICBvW3RoaXMubmFtZV0gPSBbb1t0aGlzLm5hbWVdXTsKICAgICAgICB9CgogICAgICAgIG9bdGhpcy5uYW1lXS5wdXNoKHRoaXMudmFsdWUgfHwgJycpOwogICAgICB9IGVsc2UgewogICAgICAgIGlmICghb1t0aGlzLm5hbWVdKSBvW3RoaXMubmFtZV0gPSBbXTsKICAgICAgICBvW3RoaXMubmFtZV0ucHVzaCh0aGlzLnZhbHVlIHx8ICcnKTsKICAgICAgfQogICAgfSk7CgogICAgcmV0dXJuIG87CiAgfTsKfQoKZnVuY3Rpb24gZ2V0VGVtcGxhdGUocGF0aCwgc2NyaXB0KSB7CgogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CgogICAgaWYgKEhhbmRsZWJhcnMudGVtcGxhdGVzID09PSB1bmRlZmluZWQgfHwgSGFuZGxlYmFycy50ZW1wbGF0ZXNbbmFtZV0gPT09IHVuZGVmaW5lZCkgewogICAgICBIYW5kbGViYXJzLnRlbXBsYXRlcyA9IHt9OwogICAgfSBlbHNlIHsKICAgICAgcmVzb2x2ZShIYW5kbGViYXJzLnRlbXBsYXRlc1tuYW1lXSk7CiAgICB9CgogICAgdmFyIHRlbXBsYXRlRmlsZSA9ICQuYWpheCh7CiAgICAgIHVybDogcGF0aCArICcuaGJzJywKICAgICAgc3VjY2VzczogZnVuY3Rpb24gc3VjY2VzcyhkYXRhKSB7CiAgICAgICAgSGFuZGxlYmFycy50ZW1wbGF0ZXNbbmFtZV0gPSBIYW5kbGViYXJzLmNvbXBpbGUoZGF0YSk7CiAgICAgIH0sCgogICAgICBmYWlsOiBmdW5jdGlvbiBmYWlsKHJlYXNvbikgewogICAgICAgIHJldHVybiByZWFzb247CiAgICAgIH0KICAgIH0pOwoKICAgIHZhciBzY3JpcHRGaWxlID0gJC5nZXRTY3JpcHQoc2NyaXB0KTsKCiAgICB2YXIgcmVxdWVzdHMgPSBbXTsKICAgIGlmIChwYXRoKSByZXF1ZXN0cy5wdXNoKHRlbXBsYXRlRmlsZSk7CiAgICBpZiAoc2NyaXB0KSByZXF1ZXN0cy5wdXNoKHNjcmlwdEZpbGUpOwoKICAgIFByb21pc2UuYWxsKHJlcXVlc3RzKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgcmVzb2x2ZShIYW5kbGViYXJzLnRlbXBsYXRlc1tuYW1lXSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVhc29uKSB7CiAgICAgIHJlamVjdChyZWFzb24pOwogICAgfSk7CiAgfSk7Cn0KCn0se31dfSx7fSxbMl0pKDIpCn0pOw==",
      "sourceCodeClassname": "HelloWorldObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10002,
    "type": "Hyperties",
    "version": "0.1",
    "description": "Description of HelloWorldObserver",
    "objectName": "HelloWorldObserver",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "HelloWorldReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "HelloWorldReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10003,
    "type": "Hyperties",
    "version": "0.1",
    "description": "Description of HelloWorldReporter",
    "objectName": "HelloWorldReporter",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "HypertyChat": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "HypertyChat",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10004,
    "type": "Hyperties",
    "version": "0.1",
    "description": "Description of HypertyChat",
    "objectName": "HypertyChat",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "GroupChatHyperty": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "GroupChatHyperty",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 1,
    "type": "Hyperties",
    "version": "0.1",
    "description": "Description of GroupChatHyperty",
    "objectName": "GroupChatHyperty",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  }
}